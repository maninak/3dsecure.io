!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.THREE=t.THREE||{})}(this,function(t){function e(){}function i(t,e){this.x=t||0,this.y=e||0}function n(t,e,r,a,o,s,l,h,c,u){Object.defineProperty(this,"id",{value:Te++}),this.uuid=we.generateUUID(),this.name="",this.image=void 0!==t?t:n.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:n.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:1001,this.wrapT=void 0!==a?a:1001,this.magFilter=void 0!==o?o:1006,this.minFilter=void 0!==s?s:1008,this.anisotropy=void 0!==c?c:1,this.format=void 0!==l?l:1023,this.type=void 0!==h?h:1009,this.offset=new i(0,0),this.repeat=new i(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==u?u:3e3,this.version=0,this.onUpdate=null}function r(t,e,i,n){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0!==n?n:1}function a(t,e,i){this.uuid=we.generateUUID(),this.width=t,this.height=e,this.scissor=new r(0,0,t,e),this.scissorTest=!1,this.viewport=new r(0,0,t,e),void 0===(i=i||{}).minFilter&&(i.minFilter=1006),this.texture=new n(void 0,void 0,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}function o(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._w=void 0!==n?n:1}function s(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0}function l(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}function h(t,e,i,r,a,o,s,l,h,c,u,d){n.call(this,null,o,s,l,h,c,r,a,u,d),this.image={data:t,width:e,height:i},this.magFilter=void 0!==h?h:1003,this.minFilter=void 0!==c?c:1003,this.flipY=this.generateMipmaps=!1,this.unpackAlignment=1}function c(t,e,i,r,a,o,s,l,h,c){t=void 0!==t?t:[],n.call(this,t,void 0!==e?e:301,i,r,a,o,s,l,h,c),this.flipY=!1}function u(t,e,i){var n=t[0];if(0>=n||0<n)return t;var r=e*i,a=Le[r];if(void 0===a&&(a=new Float32Array(r),Le[r]=a),0!==e)for(n.toArray(a,0),n=1,r=0;n!==e;++n)r+=i,t[n].toArray(a,r);return a}function d(t,e){var i=Re[e];void 0===i&&(i=new Int32Array(e),Re[e]=i);for(var n=0;n!==e;++n)i[n]=t.allocTextureUnit();return i}function f(t,e){t.uniform1f(this.addr,e)}function p(t,e){t.uniform1i(this.addr,e)}function m(t,e){void 0===e.x?t.uniform2fv(this.addr,e):t.uniform2f(this.addr,e.x,e.y)}function g(t,e){void 0!==e.x?t.uniform3f(this.addr,e.x,e.y,e.z):void 0!==e.r?t.uniform3f(this.addr,e.r,e.g,e.b):t.uniform3fv(this.addr,e)}function v(t,e){void 0===e.x?t.uniform4fv(this.addr,e):t.uniform4f(this.addr,e.x,e.y,e.z,e.w)}function x(t,e){t.uniformMatrix2fv(this.addr,!1,e.elements||e)}function _(t,e){void 0===e.elements?t.uniformMatrix3fv(this.addr,!1,e):(Ce.set(e.elements),t.uniformMatrix3fv(this.addr,!1,Ce))}function y(t,e){void 0===e.elements?t.uniformMatrix4fv(this.addr,!1,e):(Pe.set(e.elements),t.uniformMatrix4fv(this.addr,!1,Pe))}function M(t,e,i){var n=i.allocTextureUnit();t.uniform1i(this.addr,n),i.setTexture2D(e||Se,n)}function E(t,e,i){var n=i.allocTextureUnit();t.uniform1i(this.addr,n),i.setTextureCube(e||Ae,n)}function b(t,e){t.uniform2iv(this.addr,e)}function w(t,e){t.uniform3iv(this.addr,e)}function T(t,e){t.uniform4iv(this.addr,e)}function S(t){switch(t){case 5126:return f;case 35664:return m;case 35665:return g;case 35666:return v;case 35674:return x;case 35675:return _;case 35676:return y;case 35678:case 36198:return M;case 35680:return E;case 5124:case 35670:return p;case 35667:case 35671:return b;case 35668:case 35672:return w;case 35669:case 35673:return T}}function A(t,e){t.uniform1fv(this.addr,e)}function L(t,e){t.uniform1iv(this.addr,e)}function R(t,e){t.uniform2fv(this.addr,u(e,this.size,2))}function P(t,e){t.uniform3fv(this.addr,u(e,this.size,3))}function C(t,e){t.uniform4fv(this.addr,u(e,this.size,4))}function U(t,e){t.uniformMatrix2fv(this.addr,!1,u(e,this.size,4))}function N(t,e){t.uniformMatrix3fv(this.addr,!1,u(e,this.size,9))}function D(t,e){t.uniformMatrix4fv(this.addr,!1,u(e,this.size,16))}function I(t,e,i){var n=e.length,r=d(i,n);for(t.uniform1iv(this.addr,r),t=0;t!==n;++t)i.setTexture2D(e[t]||Se,r[t])}function F(t,e,i){var n=e.length,r=d(i,n);for(t.uniform1iv(this.addr,r),t=0;t!==n;++t)i.setTextureCube(e[t]||Ae,r[t])}function z(t){switch(t){case 5126:return A;case 35664:return R;case 35665:return P;case 35666:return C;case 35674:return U;case 35675:return N;case 35676:return D;case 35678:return I;case 35680:return F;case 5124:case 35670:return L;case 35667:case 35671:return b;case 35668:case 35672:return w;case 35669:case 35673:return T}}function O(t,e,i){this.id=t,this.addr=i,this.setValue=S(e.type)}function B(t,e,i){this.id=t,this.addr=i,this.size=e.size,this.setValue=z(e.type)}function G(t){this.id=t,this.seq=[],this.map={}}function V(t,e,i){this.seq=[],this.map={},this.renderer=i,i=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(var n=0;n<i;++n){var r=t.getActiveUniform(e,n),a=t.getUniformLocation(e,r.name),o=this,s=r.name,l=s.length;for(Ue.lastIndex=0;;){var h=Ue.exec(s),c=Ue.lastIndex,u=h[1],d=h[3];if("]"===h[2]&&(u|=0),void 0===d||"["===d&&c+2===l){s=o,r=void 0===d?new O(u,r,a):new B(u,r,a),s.seq.push(r),s.map[r.id]=r;break}void 0===(d=o.map[u])&&(d=new G(u),u=o,o=d,u.seq.push(o),u.map[o.id]=o),o=d}}}function H(t,e,i){return void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}function k(t,e){this.min=void 0!==t?t:new i(1/0,1/0),this.max=void 0!==e?e:new i(-1/0,-1/0)}function W(t,e,n,r,a){var o,l,h,c,u,d,f,p,m,g,v,x,_,y,M,E;this.render=function(t,b,w,T){if(0!==t.length){b=new s;var S=T.w/T.z,A=.5*T.z,L=.5*T.w,R=new i((N=16/T.w)*S,N),P=new s(1,1,0),C=new i(1,1),U=new k;if(U.min.set(T.x,T.y),U.max.set(T.x+(T.z-16),T.y+(T.w-16)),void 0===y){var N=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),D=new Uint16Array([0,1,2,0,2,3]);v=e.createBuffer(),x=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,v),e.bufferData(e.ARRAY_BUFFER,N,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,x),e.bufferData(e.ELEMENT_ARRAY_BUFFER,D,e.STATIC_DRAW),M=e.createTexture(),E=e.createTexture(),n.bindTexture(e.TEXTURE_2D,M),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),n.bindTexture(e.TEXTURE_2D,E),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST);var N=_={vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},D=e.createProgram(),I=e.createShader(e.FRAGMENT_SHADER),F=e.createShader(e.VERTEX_SHADER),z="precision "+a.precision+" float;\n";e.shaderSource(I,z+N.fragmentShader),e.shaderSource(F,z+N.vertexShader),e.compileShader(I),e.compileShader(F),e.attachShader(D,I),e.attachShader(D,F),e.linkProgram(D),y=D,m=e.getAttribLocation(y,"position"),g=e.getAttribLocation(y,"uv"),o=e.getUniformLocation(y,"renderType"),l=e.getUniformLocation(y,"map"),h=e.getUniformLocation(y,"occlusionMap"),c=e.getUniformLocation(y,"opacity"),u=e.getUniformLocation(y,"color"),d=e.getUniformLocation(y,"scale"),f=e.getUniformLocation(y,"rotation"),p=e.getUniformLocation(y,"screenPosition")}for(n.useProgram(y),n.initAttributes(),n.enableAttribute(m),n.enableAttribute(g),n.disableUnusedAttributes(),e.uniform1i(h,0),e.uniform1i(l,1),e.bindBuffer(e.ARRAY_BUFFER,v),e.vertexAttribPointer(m,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(g,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,x),n.disable(e.CULL_FACE),n.buffers.depth.setMask(!1),D=0,I=t.length;D<I;D++)if(N=16/T.w,R.set(N*S,N),F=t[D],b.set(F.matrixWorld.elements[12],F.matrixWorld.elements[13],F.matrixWorld.elements[14]),b.applyMatrix4(w.matrixWorldInverse),b.applyMatrix4(w.projectionMatrix),P.copy(b),C.x=T.x+P.x*A+A-8,C.y=T.y+P.y*L+L-8,!0===U.containsPoint(C)){n.activeTexture(e.TEXTURE0),n.bindTexture(e.TEXTURE_2D,null),n.activeTexture(e.TEXTURE1),n.bindTexture(e.TEXTURE_2D,M),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,C.x,C.y,16,16,0),e.uniform1i(o,0),e.uniform2f(d,R.x,R.y),e.uniform3f(p,P.x,P.y,P.z),n.disable(e.BLEND),n.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),n.activeTexture(e.TEXTURE0),n.bindTexture(e.TEXTURE_2D,E),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,C.x,C.y,16,16,0),e.uniform1i(o,1),n.disable(e.DEPTH_TEST),n.activeTexture(e.TEXTURE1),n.bindTexture(e.TEXTURE_2D,M),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),F.positionScreen.copy(P),F.customUpdateCallback?F.customUpdateCallback(F):F.updateLensFlares(),e.uniform1i(o,2),n.enable(e.BLEND);for(var z=0,O=F.lensFlares.length;z<O;z++){var B=F.lensFlares[z];.001<B.opacity&&.001<B.scale&&(P.x=B.x,P.y=B.y,P.z=B.z,N=B.size*B.scale/T.w,R.x=N*S,R.y=N,e.uniform3f(p,P.x,P.y,P.z),e.uniform2f(d,R.x,R.y),e.uniform1f(f,B.rotation),e.uniform1f(c,B.opacity),e.uniform3f(u,B.color.r,B.color.g,B.color.b),n.setBlending(B.blending,B.blendEquation,B.blendSrc,B.blendDst),r.setTexture2D(B.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}}n.enable(e.CULL_FACE),n.enable(e.DEPTH_TEST),n.buffers.depth.setMask(!0),n.reset()}}}function X(t,e,i,r,a,o,s,l,h){n.call(this,t,e,i,r,a,o,s,l,h),this.needsUpdate=!0}function Y(t,e,i,n,r){function a(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:e.id-t.id}var l,h,c,u,d,f,p,m,g,v,x,_,y,M,E,b,w,T,S,A,L,R=new s,P=new o,C=new s;this.render=function(o,s,U){if(0!==o.length){if(void 0===A){var N=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),D=new Uint16Array([0,1,2,0,2,3]);T=e.createBuffer(),S=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,T),e.bufferData(e.ARRAY_BUFFER,N,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,S),e.bufferData(e.ELEMENT_ARRAY_BUFFER,D,e.STATIC_DRAW),N=e.createProgram(),D=e.createShader(e.VERTEX_SHADER);var I=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(D,["precision "+r.precision+" float;","#define SHADER_NAME SpriteMaterial\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),e.shaderSource(I,["precision "+r.precision+" float;","#define SHADER_NAME SpriteMaterial\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),e.compileShader(D),e.compileShader(I),e.attachShader(N,D),e.attachShader(N,I),e.linkProgram(N),A=N,b=e.getAttribLocation(A,"position"),w=e.getAttribLocation(A,"uv"),l=e.getUniformLocation(A,"uvOffset"),h=e.getUniformLocation(A,"uvScale"),c=e.getUniformLocation(A,"rotation"),u=e.getUniformLocation(A,"scale"),d=e.getUniformLocation(A,"color"),f=e.getUniformLocation(A,"map"),p=e.getUniformLocation(A,"opacity"),m=e.getUniformLocation(A,"modelViewMatrix"),g=e.getUniformLocation(A,"projectionMatrix"),v=e.getUniformLocation(A,"fogType"),x=e.getUniformLocation(A,"fogDensity"),_=e.getUniformLocation(A,"fogNear"),y=e.getUniformLocation(A,"fogFar"),M=e.getUniformLocation(A,"fogColor"),E=e.getUniformLocation(A,"alphaTest"),(N=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")).width=8,N.height=8,(D=N.getContext("2d")).fillStyle="white",D.fillRect(0,0,8,8),L=new X(N)}i.useProgram(A),i.initAttributes(),i.enableAttribute(b),i.enableAttribute(w),i.disableUnusedAttributes(),i.disable(e.CULL_FACE),i.enable(e.BLEND),e.bindBuffer(e.ARRAY_BUFFER,T),e.vertexAttribPointer(b,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(w,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,S),e.uniformMatrix4fv(g,!1,U.projectionMatrix.elements),i.activeTexture(e.TEXTURE0),e.uniform1i(f,0),D=N=0,(I=s.fog)?(e.uniform3f(M,I.color.r,I.color.g,I.color.b),I.isFog?(e.uniform1f(_,I.near),e.uniform1f(y,I.far),e.uniform1i(v,1),D=N=1):I.isFogExp2&&(e.uniform1f(x,I.density),e.uniform1i(v,2),D=N=2)):(e.uniform1i(v,0),D=N=0);for(var F=0,z=o.length;F<z;F++)(I=o[F]).modelViewMatrix.multiplyMatrices(U.matrixWorldInverse,I.matrixWorld),I.z=-I.modelViewMatrix.elements[14];o.sort(a);for(var O=[],F=0,z=o.length;F<z;F++){var B=(I=o[F]).material;if(!1!==B.visible){I.onBeforeRender(t,s,U,void 0,B,void 0),e.uniform1f(E,B.alphaTest),e.uniformMatrix4fv(m,!1,I.modelViewMatrix.elements),I.matrixWorld.decompose(R,P,C),O[0]=C.x,O[1]=C.y;var G=0;s.fog&&B.fog&&(G=D),N!==G&&(e.uniform1i(v,G),N=G),null!==B.map?(e.uniform2f(l,B.map.offset.x,B.map.offset.y),e.uniform2f(h,B.map.repeat.x,B.map.repeat.y)):(e.uniform2f(l,0,0),e.uniform2f(h,1,1)),e.uniform1f(p,B.opacity),e.uniform3f(d,B.color.r,B.color.g,B.color.b),e.uniform1f(c,B.rotation),e.uniform2fv(u,O),i.setBlending(B.blending,B.blendEquation,B.blendSrc,B.blendDst,B.blendEquationAlpha,B.blendSrcAlpha,B.blendDstAlpha,B.premultipliedAlpha),i.buffers.depth.setTest(B.depthTest),i.buffers.depth.setMask(B.depthWrite),n.setTexture2D(B.map||L,0),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),I.onAfterRender(t,s,U,void 0,B,void 0)}}i.enable(e.CULL_FACE),i.reset()}}}function j(){Object.defineProperty(this,"id",{value:ze++}),this.uuid=we.generateUUID(),this.name="",this.type="Material",this.lights=this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=0,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null,this.depthFunc=3,this.depthWrite=this.depthTest=!0,this.clippingPlanes=null,this.clipShadows=this.clipIntersection=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this.userData={},this.needsUpdate=!0}function q(t){j.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.morphNormals=this.morphTargets=this.skinning=this.clipping=this.lights=this.fog=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function Z(t){j.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.morphTargets=this.skinning=!1,this.displacementMap=this.alphaMap=this.map=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.setValues(t)}function J(t){j.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new s,this.nearDistance=1,this.farDistance=1e3,this.morphTargets=this.skinning=!1,this.displacementMap=this.alphaMap=this.map=null,this.displacementScale=1,this.displacementBias=0,this.lights=this.fog=!1,this.setValues(t)}function Q(t,e){this.min=void 0!==t?t:new s(1/0,1/0,1/0),this.max=void 0!==e?e:new s(-1/0,-1/0,-1/0)}function K(t,e){this.center=void 0!==t?t:new s,this.radius=void 0!==e?e:0}function $(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}function tt(t,e){this.normal=void 0!==t?t:new s(1,0,0),this.constant=void 0!==e?e:0}function et(t,e,i,n,r,a){this.planes=[void 0!==t?t:new tt,void 0!==e?e:new tt,void 0!==i?i:new tt,void 0!==n?n:new tt,void 0!==r?r:new tt,void 0!==a?a:new tt]}function it(t,e,n){function o(e,i,n,r,a,o){var s=e.geometry,l=g,h=e.customDepthMaterial;return n&&(l=v,h=e.customDistanceMaterial),h?l=h:(h=!1,i.morphTargets&&(s&&s.isBufferGeometry?h=s.morphAttributes&&s.morphAttributes.position&&0<s.morphAttributes.position.length:s&&s.isGeometry&&(h=s.morphTargets&&0<s.morphTargets.length)),e.isSkinnedMesh&&!1===i.skinning&&console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e),e=e.isSkinnedMesh&&i.skinning,s=0,h&&(s|=1),e&&(s|=2),l=l[s]),t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length&&(s=l.uuid,h=i.uuid,void 0===(e=x[s])&&(e={},x[s]=e),void 0===(s=e[h])&&(s=l.clone(),e[h]=s),l=s),l.visible=i.visible,l.wireframe=i.wireframe,h=i.side,T.renderSingleSided&&2==h&&(h=0),T.renderReverseSided&&(0===h?h=1:1===h&&(h=0)),l.side=h,l.clipShadows=i.clipShadows,l.clippingPlanes=i.clippingPlanes,l.clipIntersection=i.clipIntersection,l.wireframeLinewidth=i.wireframeLinewidth,l.linewidth=i.linewidth,n&&l.isMeshDistanceMaterial&&(l.referencePosition.copy(r),l.nearDistance=a,l.farDistance=o),l}function h(i,n,r,a){var s;if(!1!==i.visible){if(i.layers.test(n.layers)&&(i.isMesh||i.isLine||i.isPoints)&&i.castShadow&&(!i.frustumCulled||c.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,i.matrixWorld);var l=e.update(i),u=i.material;if(Array.isArray(u))for(var d=l.groups,f=0,p=d.length;f<p;f++){var g=d[f];(s=u[g.materialIndex])&&s.visible&&(s=o(i,s,a,m,r.near,r.far),t.renderBufferDirect(r,null,l,s,i,g))}else u.visible&&(s=o(i,u,a,m,r.near,r.far),t.renderBufferDirect(r,null,l,s,i,null))}for(l=0,u=(i=i.children).length;l<u;l++)h(i[l],n,r,a)}}var c=new et,u=new l,d=new i,f=new i(n,n),p=new s,m=new s,g=Array(4),v=Array(4),x={},_=[new s(1,0,0),new s(-1,0,0),new s(0,0,1),new s(0,0,-1),new s(0,1,0),new s(0,-1,0)],y=[new s(0,1,0),new s(0,1,0),new s(0,1,0),new s(0,1,0),new s(0,0,1),new s(0,0,-1)],M=[new r,new r,new r,new r,new r,new r];for(n=0;4!==n;++n){var E=0!=(1&n),b=0!=(2&n),w=new Z({depthPacking:3201,morphTargets:E,skinning:b});g[n]=w,E=new J({morphTargets:E,skinning:b}),v[n]=E}var T=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.renderSingleSided=this.renderReverseSided=!0,this.render=function(e,i,n){if(!1!==T.enabled&&(!1!==T.autoUpdate||!1!==T.needsUpdate)&&0!==e.length){var r=t.state;r.disable(t.context.BLEND),r.buffers.color.setClear(1,1,1,1),r.buffers.depth.setTest(!0),r.setScissorTest(!1);for(var o,s=0,l=e.length;s<l;s++){var g=e[s];o=g.shadow;var v=g&&g.isPointLight;if(void 0===o)console.warn("THREE.WebGLShadowMap:",g,"has no shadow.");else{var x=o.camera;if(d.copy(o.mapSize),d.min(f),v){var E=d.x,b=d.y;M[0].set(2*E,b,E,b),M[1].set(0,b,E,b),M[2].set(3*E,b,E,b),M[3].set(E,b,E,b),M[4].set(3*E,0,E,b),M[5].set(E,0,E,b),d.x*=4,d.y*=2}for(null===o.map&&(o.map=new a(d.x,d.y,{minFilter:1003,magFilter:1003,format:1023}),o.map.texture.name=g.name+".shadowMap",x.updateProjectionMatrix()),o.isSpotLightShadow&&o.update(g),E=o.map,b=o.matrix,m.setFromMatrixPosition(g.matrixWorld),x.position.copy(m),v?(o=6,b.makeTranslation(-m.x,-m.y,-m.z)):(o=1,p.setFromMatrixPosition(g.target.matrixWorld),x.lookAt(p),x.updateMatrixWorld(),b.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),b.multiply(x.projectionMatrix),b.multiply(x.matrixWorldInverse)),t.setRenderTarget(E),t.clear(),g=0;g<o;g++)v&&(p.copy(x.position),p.add(_[g]),x.up.copy(y[g]),x.lookAt(p),x.updateMatrixWorld(),r.viewport(M[g])),u.multiplyMatrices(x.projectionMatrix,x.matrixWorldInverse),c.setFromMatrix(u),h(i,n,x,v)}}T.needsUpdate=!1}}}function nt(t){var e={};return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e[t.uuid]},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);var n=e[i.uuid];n&&(t.deleteBuffer(n.buffer),delete e[i.uuid])},update:function(i,n){if(i.isInterleavedBufferAttribute&&(i=i.data),void 0===(r=e[i.uuid])){var r=i.uuid,a=i.array,o=i.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW,s=t.createBuffer();t.bindBuffer(n,s),t.bufferData(n,a,o),i.onUploadCallback(),n=t.FLOAT,a instanceof Float32Array?n=t.FLOAT:a instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):a instanceof Uint16Array?n=t.UNSIGNED_SHORT:a instanceof Int16Array?n=t.SHORT:a instanceof Uint32Array?n=t.UNSIGNED_INT:a instanceof Int32Array?n=t.INT:a instanceof Int8Array?n=t.BYTE:a instanceof Uint8Array&&(n=t.UNSIGNED_BYTE),e[r]={buffer:s,type:n,bytesPerElement:a.BYTES_PER_ELEMENT,version:i.version}}else r.version<i.version&&(a=i,s=a.array,o=a.updateRange,t.bindBuffer(n,r.buffer),!1===a.dynamic?t.bufferData(n,s,t.STATIC_DRAW):-1===o.count?t.bufferSubData(n,0,s):0===o.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(n,o.offset*s.BYTES_PER_ELEMENT,s.subarray(o.offset,o.offset+o.count)),o.count=-1),r.version=i.version)}}}function rt(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._order=n||rt.DefaultOrder}function at(){this.mask=1}function ot(){Object.defineProperty(this,"id",{value:Oe++}),this.uuid=we.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ot.DefaultUp.clone();var t=new s,e=new rt,i=new o,n=new s(1,1,1);e.onChange(function(){i.setFromEuler(e,!1)}),i.onChange(function(){e.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:i},scale:{enumerable:!0,value:n},modelViewMatrix:{value:new l},normalMatrix:{value:new $}}),this.matrix=new l,this.matrixWorld=new l,this.matrixAutoUpdate=ot.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new at,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function st(){ot.call(this),this.type="Camera",this.matrixWorldInverse=new l,this.projectionMatrix=new l}function lt(t,e,i,n,r,a){st.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=void 0!==r?r:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}function ht(t,e,i,n){st.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==i?i:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function ct(t,e,i,n,r,a){this.a=t,this.b=e,this.c=i,this.normal=n&&n.isVector3?n:new s,this.vertexNormals=Array.isArray(n)?n:[],this.color=r&&r.isColor?r:new H,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==a?a:0}function ut(){Object.defineProperty(this,"id",{value:Be++}),this.uuid=we.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.verticesNeedUpdate=this.elementsNeedUpdate=!1}function dt(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=we.generateUUID(),this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function ft(t,e){dt.call(this,new Int8Array(t),e)}function pt(t,e){dt.call(this,new Uint8Array(t),e)}function mt(t,e){dt.call(this,new Uint8ClampedArray(t),e)}function gt(t,e){dt.call(this,new Int16Array(t),e)}function vt(t,e){dt.call(this,new Uint16Array(t),e)}function xt(t,e){dt.call(this,new Int32Array(t),e)}function _t(t,e){dt.call(this,new Uint32Array(t),e)}function yt(t,e){dt.call(this,new Float32Array(t),e)}function Mt(t,e){dt.call(this,new Float64Array(t),e)}function Et(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingSphere=this.boundingBox=null,this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1}function bt(t){if(0===t.length)return-1/0;for(var e=t[0],i=1,n=t.length;i<n;++i)t[i]>e&&(e=t[i]);return e}function wt(){Object.defineProperty(this,"id",{value:Be++}),this.uuid=we.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingSphere=this.boundingBox=null,this.drawRange={start:0,count:1/0}}function Tt(t,e,i,n,r,a){function o(t,e,i,n,r,a,o,m,g,v,x){var _=a/g,y=o/v,M=a/2,E=o/2,b=m/2;o=g+1;var w,T,S=v+1,A=a=0,L=new s;for(T=0;T<S;T++){var R=T*y-E;for(w=0;w<o;w++)L[t]=(w*_-M)*n,L[e]=R*r,L[i]=b,c.push(L.x,L.y,L.z),L[t]=0,L[e]=0,L[i]=0<m?1:-1,u.push(L.x,L.y,L.z),d.push(w/g),d.push(1-T/v),a+=1}for(T=0;T<v;T++)for(w=0;w<g;w++)t=f+w+o*(T+1),e=f+(w+1)+o*(T+1),i=f+(w+1)+o*T,h.push(f+w+o*T,t,i),h.push(t,e,i),A+=6;l.addGroup(p,A,x),p+=A,f+=a}wt.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:a};var l=this;n=Math.floor(n)||1,r=Math.floor(r)||1;var h=[],c=[],u=[],d=[],f=0,p=0;o("z","y","x",-1,-1,i,e,t,a=Math.floor(a)||1,r,0),o("z","y","x",1,-1,i,e,-t,a,r,1),o("x","z","y",1,1,t,i,e,n,a,2),o("x","z","y",1,-1,t,i,-e,n,a,3),o("x","y","z",1,-1,t,e,i,n,r,4),o("x","y","z",-1,-1,t,e,-i,n,r,5),this.setIndex(h),this.addAttribute("position",new yt(c,3)),this.addAttribute("normal",new yt(u,3)),this.addAttribute("uv",new yt(d,2))}function St(t,e,i,n){wt.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};var r=t/2,a=e/2,o=(i=Math.floor(i)||1)+1,s=(n=Math.floor(n)||1)+1,l=t/i,h=e/n,c=[],u=[],d=[],f=[];for(t=0;t<s;t++){var p=t*h-a;for(e=0;e<o;e++)u.push(e*l-r,-p,0),d.push(0,0,1),f.push(e/i),f.push(1-t/n)}for(t=0;t<n;t++)for(e=0;e<i;e++)r=e+o*(t+1),a=e+1+o*(t+1),s=e+1+o*t,c.push(e+o*t,r,s),c.push(r,a,s);this.setIndex(c),this.addAttribute("position",new yt(u,3)),this.addAttribute("normal",new yt(d,3)),this.addAttribute("uv",new yt(f,2))}function At(t){j.call(this),this.type="MeshBasicMaterial",this.color=new H(16777215),this.lightMap=this.map=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.envMap=this.alphaMap=this.specularMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.lights=this.morphTargets=this.skinning=!1,this.setValues(t)}function Lt(t,e){this.origin=void 0!==t?t:new s,this.direction=void 0!==e?e:new s}function Rt(t,e,i){this.a=void 0!==t?t:new s,this.b=void 0!==e?e:new s,this.c=void 0!==i?i:new s}function Pt(t,e){ot.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new wt,this.material=void 0!==e?e:new At({color:16777215*Math.random()}),this.drawMode=0,this.updateMorphTargets()}function Ct(t,e,i,n){function r(t,i){e.buffers.color.setClear(t.r,t.g,t.b,i,n)}var a,o,s,l=new H(0),h=0;return{getClearColor:function(){return l},setClearColor:function(t,e){l.set(t),r(l,h=void 0!==e?e:1)},getClearAlpha:function(){return h},setClearAlpha:function(t){r(l,h=t)},render:function(e,n,c,u){null===(n=n.background)?r(l,h):n&&n.isColor&&(r(n,1),u=!0),(t.autoClear||u)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),n&&n.isCubeTexture?(void 0===s&&((s=new Pt(new Tt(1,1,1),new q({uniforms:Fe.cube.uniforms,vertexShader:Fe.cube.vertexShader,fragmentShader:Fe.cube.fragmentShader,side:1,depthTest:!0,depthWrite:!1,polygonOffset:!0,fog:!1}))).geometry.removeAttribute("normal"),s.geometry.removeAttribute("uv"),s.onBeforeRender=function(t,e,i){t=i.far,this.matrixWorld.makeScale(t,t,t),this.matrixWorld.copyPosition(i.matrixWorld),this.material.polygonOffsetUnits=10*t},i.update(s.geometry)),s.material.uniforms.tCube.value=n,e.push(s,s.geometry,s.material,0,null)):n&&n.isTexture&&(void 0===a&&(a=new lt(-1,1,1,-1,0,1),o=new Pt(new St(2,2),new At({depthTest:!1,depthWrite:!1,fog:!1})),i.update(o.geometry)),o.material.map=n,t.renderBufferDirect(a,null,o.geometry,o.material,o,null))}}}function Ut(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program&&e.program&&t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Nt(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Dt(){var t=[],e=0,i=[],n=[];return{opaque:i,transparent:n,init:function(){e=0,i.length=0,n.length=0},push:function(r,a,o,s,l){var h=t[e];void 0===h?(h={id:r.id,object:r,geometry:a,material:o,program:o.program,renderOrder:r.renderOrder,z:s,group:l},t[e]=h):(h.id=r.id,h.object=r,h.geometry=a,h.material=o,h.program=o.program,h.renderOrder=r.renderOrder,h.z=s,h.group=l),(!0===o.transparent?n:i).push(h),e++},sort:function(){1<i.length&&i.sort(Ut),1<n.length&&n.sort(Nt)}}}function It(){var t={};return{get:function(e,i){return e=e.id+","+i.id,void 0===(i=t[e])&&(i=new Dt,t[e]=i),i},dispose:function(){t={}}}}function Ft(t,e){return Math.abs(e[1])-Math.abs(t[1])}function zt(t){var e={},i=new Float32Array(8);return{update:function(n,r,a,o){var s=n.morphTargetInfluences,l=s.length;if(void 0===(n=e[r.id])){n=[];for(var h=0;h<l;h++)n[h]=[h,0];e[r.id]=n}var c=a.morphTargets&&r.morphAttributes.position;for(a=a.morphNormals&&r.morphAttributes.normal,h=0;h<l;h++){var u=n[h];0!==u[1]&&(c&&r.removeAttribute("morphTarget"+h),a&&r.removeAttribute("morphNormal"+h))}for(h=0;h<l;h++)u=n[h],u[0]=h,u[1]=s[h];for(n.sort(Ft),h=0;8>h;h++)(u=n[h])&&(s=u[0],u=u[1])?(c&&r.addAttribute("morphTarget"+h,c[s]),a&&r.addAttribute("morphNormal"+h,a[s]),i[h]=u):i[h]=0;o.getUniforms().setValue(t,"morphTargetInfluences",i)}}}function Ot(t,e,i){var n,r,a;this.setMode=function(t){n=t},this.setIndex=function(t){r=t.type,a=t.bytesPerElement},this.render=function(e,o){t.drawElements(n,o,r,e*a),i.calls++,i.vertices+=o,n===t.TRIANGLES?i.faces+=o/3:n===t.POINTS&&(i.points+=o)},this.renderInstances=function(o,s,l){var h=e.get("ANGLE_instanced_arrays");null===h?console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."):(h.drawElementsInstancedANGLE(n,l,r,s*a,o.maxInstancedCount),i.calls++,i.vertices+=l*o.maxInstancedCount,n===t.TRIANGLES?i.faces+=o.maxInstancedCount*l/3:n===t.POINTS&&(i.points+=o.maxInstancedCount*l))}}function Bt(t,e,i){var n;this.setMode=function(t){n=t},this.render=function(e,r){t.drawArrays(n,e,r),i.calls++,i.vertices+=r,n===t.TRIANGLES?i.faces+=r/3:n===t.POINTS&&(i.points+=r)},this.renderInstances=function(r,a,o){var s=e.get("ANGLE_instanced_arrays");if(null===s)console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");else{var l=r.attributes.position;l.isInterleavedBufferAttribute?(o=l.data.count,s.drawArraysInstancedANGLE(n,0,o,r.maxInstancedCount)):s.drawArraysInstancedANGLE(n,a,o,r.maxInstancedCount),i.calls++,i.vertices+=o*r.maxInstancedCount,n===t.TRIANGLES?i.faces+=r.maxInstancedCount*o/3:n===t.POINTS&&(i.points+=r.maxInstancedCount*o)}}}function Gt(t,e,i){function n(t){t=t.target;var o=r[t.id];null!==o.index&&e.remove(o.index);for(var s in o.attributes)e.remove(o.attributes[s]);t.removeEventListener("dispose",n),delete r[t.id],(s=a[t.id])&&(e.remove(s),delete a[t.id]),(s=a[o.id])&&(e.remove(s),delete a[o.id]),i.geometries--}var r={},a={};return{get:function(t,e){var a=r[e.id];return a||(e.addEventListener("dispose",n),e.isBufferGeometry?a=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new wt).setFromObject(t)),a=e._bufferGeometry),r[e.id]=a,i.geometries++,a)},update:function(i){var n=i.index,r=i.attributes;null!==n&&e.update(n,t.ELEMENT_ARRAY_BUFFER);for(var a in r)e.update(r[a],t.ARRAY_BUFFER);i=i.morphAttributes;for(a in i)for(var n=i[a],r=0,o=n.length;r<o;r++)e.update(n[r],t.ARRAY_BUFFER)},getWireframeAttribute:function(i){var n=a[i.id];if(n)return n;n=[];var r=i.index,o=i.attributes;if(null!==r)for(var s=r.array,l=0,h=s.length;l<h;l+=3){var c=s[l+0];o=s[l+1],r=s[l+2],n.push(c,o,o,r,r,c)}else for(s=o.position.array,l=0,h=s.length/3-1;l<h;l+=3)c=l+0,o=l+1,r=l+2,n.push(c,o,o,r,r,c);return n=new(65535<bt(n)?_t:vt)(n,1),e.update(n,t.ELEMENT_ARRAY_BUFFER),a[i.id]=n}}}function Vt(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];switch(e.type){case"DirectionalLight":var n={direction:new s,color:new H,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"SpotLight":n={position:new s,direction:new s,color:new H,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"PointLight":n={position:new s,color:new H,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":n={direction:new s,skyColor:new H,groundColor:new H};break;case"RectAreaLight":n={color:new H,position:new s,halfWidth:new s,halfHeight:new s}}return t[e.id]=n}}}function Ht(){var t=new Vt,e={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},i=new s,n=new l,r=new l;return{setup:function(a,o,s){for(var l,h=0,c=0,u=0,d=0,f=0,p=0,m=0,g=0,v=s.matrixWorldInverse,x=0,_=a.length;x<_;x++){var y=a[x];l=y.color;var M=y.intensity,E=y.distance,b=y.shadow&&y.shadow.map?y.shadow.map.texture:null;y.isAmbientLight?(h+=l.r*M,c+=l.g*M,u+=l.b*M):y.isDirectionalLight?((s=t.get(y)).color.copy(y.color).multiplyScalar(y.intensity),s.direction.setFromMatrixPosition(y.matrixWorld),i.setFromMatrixPosition(y.target.matrixWorld),s.direction.sub(i),s.direction.transformDirection(v),(s.shadow=y.castShadow)&&(l=y.shadow,s.shadowBias=l.bias,s.shadowRadius=l.radius,s.shadowMapSize=l.mapSize),e.directionalShadowMap[d]=b,e.directionalShadowMatrix[d]=y.shadow.matrix,e.directional[d]=s,d++):y.isSpotLight?((s=t.get(y)).position.setFromMatrixPosition(y.matrixWorld),s.position.applyMatrix4(v),s.color.copy(l).multiplyScalar(M),s.distance=E,s.direction.setFromMatrixPosition(y.matrixWorld),i.setFromMatrixPosition(y.target.matrixWorld),s.direction.sub(i),s.direction.transformDirection(v),s.coneCos=Math.cos(y.angle),s.penumbraCos=Math.cos(y.angle*(1-y.penumbra)),s.decay=0===y.distance?0:y.decay,(s.shadow=y.castShadow)&&(l=y.shadow,s.shadowBias=l.bias,s.shadowRadius=l.radius,s.shadowMapSize=l.mapSize),e.spotShadowMap[p]=b,e.spotShadowMatrix[p]=y.shadow.matrix,e.spot[p]=s,p++):y.isRectAreaLight?((s=t.get(y)).color.copy(l).multiplyScalar(M/(y.width*y.height)),s.position.setFromMatrixPosition(y.matrixWorld),s.position.applyMatrix4(v),r.identity(),n.copy(y.matrixWorld),n.premultiply(v),r.extractRotation(n),s.halfWidth.set(.5*y.width,0,0),s.halfHeight.set(0,.5*y.height,0),s.halfWidth.applyMatrix4(r),s.halfHeight.applyMatrix4(r),e.rectArea[m]=s,m++):y.isPointLight?((s=t.get(y)).position.setFromMatrixPosition(y.matrixWorld),s.position.applyMatrix4(v),s.color.copy(y.color).multiplyScalar(y.intensity),s.distance=y.distance,s.decay=0===y.distance?0:y.decay,(s.shadow=y.castShadow)&&(l=y.shadow,s.shadowBias=l.bias,s.shadowRadius=l.radius,s.shadowMapSize=l.mapSize,s.shadowCameraNear=l.camera.near,s.shadowCameraFar=l.camera.far),e.pointShadowMap[f]=b,e.pointShadowMatrix[f]=y.shadow.matrix,e.point[f]=s,f++):y.isHemisphereLight&&((s=t.get(y)).direction.setFromMatrixPosition(y.matrixWorld),s.direction.transformDirection(v),s.direction.normalize(),s.skyColor.copy(y.color).multiplyScalar(M),s.groundColor.copy(y.groundColor).multiplyScalar(M),e.hemi[g]=s,g++)}e.ambient[0]=h,e.ambient[1]=c,e.ambient[2]=u,e.directional.length=d,e.spot.length=p,e.rectArea.length=m,e.point.length=f,e.hemi.length=g,e.hash=d+","+f+","+p+","+m+","+g+","+o.length},state:e}}function kt(t,e){var i={};return{update:function(n){var r=e.frame,a=n.geometry,o=t.get(n,a);return i[o.id]!==r&&(a.isGeometry&&o.updateFromObject(n),t.update(o),i[o.id]=r),o},clear:function(){i={}}}}function Wt(t){t=t.split("\n");for(var e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}function Xt(t,e,i){var n=t.createShader(e);return t.shaderSource(n,i),t.compileShader(n),!1===t.getShaderParameter(n,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(n)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e===t.VERTEX_SHADER?"vertex":"fragment",t.getShaderInfoLog(n),Wt(i)),n}function Yt(t){switch(t){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw Error("unsupported encoding: "+t)}}function jt(t,e){return e=Yt(e),"vec4 "+t+"( vec4 value ) { return "+e[0]+"ToLinear"+e[1]+"; }"}function qt(t,e){return e=Yt(e),"vec4 "+t+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function Zt(t,e){switch(e){case 1:e="Linear";break;case 2:e="Reinhard";break;case 3:e="Uncharted2";break;case 4:e="OptimizedCineon";break;default:throw Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function Jt(t,e,i){return t=t||{},[t.derivatives||e.envMapCubeUV||e.bumpMap||e.normalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&i.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&i.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&i.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Kt).join("\n")}function Qt(t){var e,i=[];for(e in t){var n=t[e];!1!==n&&i.push("#define "+e+" "+n)}return i.join("\n")}function Kt(t){return""!==t}function $t(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function te(t){return t.replace(/^[ \t]*#include +<([\w\d.]+)>/gm,function(t,e){if(void 0===(t=Ie[e]))throw Error("Can not resolve #include <"+e+">");return te(t)})}function ee(t){return t.replace(/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(t,e,i,n){for(t="",e=parseInt(e);e<parseInt(i);e++)t+=n.replace(/\[ i \]/g,"[ "+e+" ]");return t})}function ie(t,e,i,n,r,a){var o=t.context,s=n.defines,l=r.vertexShader,h=r.fragmentShader,c="SHADOWMAP_TYPE_BASIC";1===a.shadowMapType?c="SHADOWMAP_TYPE_PCF":2===a.shadowMapType&&(c="SHADOWMAP_TYPE_PCF_SOFT");var u="ENVMAP_TYPE_CUBE",d="ENVMAP_MODE_REFLECTION",f="ENVMAP_BLENDING_MULTIPLY";if(a.envMap){switch(n.envMap.mapping){case 301:case 302:u="ENVMAP_TYPE_CUBE";break;case 306:case 307:u="ENVMAP_TYPE_CUBE_UV";break;case 303:case 304:u="ENVMAP_TYPE_EQUIREC";break;case 305:u="ENVMAP_TYPE_SPHERE"}switch(n.envMap.mapping){case 302:case 304:d="ENVMAP_MODE_REFRACTION"}switch(n.combine){case 0:f="ENVMAP_BLENDING_MULTIPLY";break;case 1:f="ENVMAP_BLENDING_MIX";break;case 2:f="ENVMAP_BLENDING_ADD"}}var p=0<t.gammaFactor?t.gammaFactor:1,m=Jt(n.extensions,a,e),g=Qt(s),v=o.createProgram();n.isRawShaderMaterial?(s=[g,"\n"].filter(Kt).join("\n"),e=[m,g,"\n"].filter(Kt).join("\n")):(s=["precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,g,a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+p,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+d:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&!1===a.flatShading?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+a.numClippingPlanes,a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+c:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Kt).join("\n"),e=[m,"precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,g,a.alphaTest?"#define ALPHATEST "+a.alphaTest:"","#define GAMMA_FACTOR "+p,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+u:"",a.envMap?"#define "+d:"",a.envMap?"#define "+f:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+a.numClippingPlanes,"#define UNION_CLIPPING_PLANES "+(a.numClippingPlanes-a.numClipIntersection),a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+c:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",a.envMap&&e.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",0!==a.toneMapping?"#define TONE_MAPPING":"",0!==a.toneMapping?Ie.tonemapping_pars_fragment:"",0!==a.toneMapping?Zt("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.outputEncoding||a.mapEncoding||a.envMapEncoding||a.emissiveMapEncoding?Ie.encodings_pars_fragment:"",a.mapEncoding?jt("mapTexelToLinear",a.mapEncoding):"",a.envMapEncoding?jt("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMapEncoding?jt("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.outputEncoding?qt("linearToOutputTexel",a.outputEncoding):"",a.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Kt).join("\n")),l=$t(l=te(l),a),h=$t(h=te(h),a),n.isShaderMaterial||(l=ee(l),h=ee(h)),h=e+h,l=Xt(o,o.VERTEX_SHADER,s+l),h=Xt(o,o.FRAGMENT_SHADER,h),o.attachShader(v,l),o.attachShader(v,h),void 0!==n.index0AttributeName?o.bindAttribLocation(v,0,n.index0AttributeName):!0===a.morphTargets&&o.bindAttribLocation(v,0,"position"),o.linkProgram(v),a=o.getProgramInfoLog(v),r=o.getShaderInfoLog(l),c=o.getShaderInfoLog(h),d=u=!0,!1===o.getProgramParameter(v,o.LINK_STATUS)?(u=!1,console.error("THREE.WebGLProgram: shader error: ",o.getError(),"gl.VALIDATE_STATUS",o.getProgramParameter(v,o.VALIDATE_STATUS),"gl.getProgramInfoLog",a,r,c)):""!==a?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",a):""!==r&&""!==c||(d=!1),d&&(this.diagnostics={runnable:u,material:n,programLog:a,vertexShader:{log:r,prefix:s},fragmentShader:{log:c,prefix:e}}),o.deleteShader(l),o.deleteShader(h);var x;this.getUniforms=function(){return void 0===x&&(x=new V(o,v,t)),x};var _;return this.getAttributes=function(){if(void 0===_){for(var t={},e=o.getProgramParameter(v,o.ACTIVE_ATTRIBUTES),i=0;i<e;i++){var n=o.getActiveAttrib(v,i).name;t[n]=o.getAttribLocation(v,n)}_=t}return _},this.destroy=function(){o.deleteProgram(v),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=Ge++,this.code=i,this.usedTimes=1,this.program=v,this.vertexShader=l,this.fragmentShader=h,this}function ne(t,e,i){function n(t,e){if(t)t.isTexture?i=t.encoding:t.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),i=t.texture.encoding);else var i=3e3;return 3e3===i&&e&&(i=3007),i}var r=[],a={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow"},o="precision supportsVertexTextures map mapEncoding envMap envMapMode envMapEncoding lightMap aoMap emissiveMap emissiveMapEncoding bumpMap normalMap displacementMap specularMap roughnessMap metalnessMap gradientMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights numRectAreaLights shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes numClipIntersection depthPacking dithering".split(" ");this.getParameters=function(e,r,o,s,l,h,c){var u=a[e.type];if(c.isSkinnedMesh){var d=c.skeleton.bones;if(i.floatVertexTextures)d=1024;else{var f=Math.min(Math.floor((i.maxVertexUniforms-20)/4),d.length);f<d.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+d.length+" bones. This GPU supports "+f+"."),d=0):d=f}}else d=0;f=i.precision,null!==e.precision&&(f=i.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",f,"instead.");var p=t.getRenderTarget();return{shaderID:u,precision:f,supportsVertexTextures:i.vertexTextures,outputEncoding:n(p?p.texture:null,t.gammaOutput),map:!!e.map,mapEncoding:n(e.map,t.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:n(e.envMap,t.gammaInput),envMapCubeUV:!!e.envMap&&(306===e.envMap.mapping||307===e.envMap.mapping),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:n(e.emissiveMap,t.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,combine:e.combine,vertexColors:e.vertexColors,fog:!!s,useFog:e.fog,fogExp:s&&s.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:i.logarithmicDepthBuffer,skinning:e.skinning&&0<d,maxBones:d,useVertexTexture:i.floatVertexTextures,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:r.directional.length,numPointLights:r.point.length,numSpotLights:r.spot.length,numRectAreaLights:r.rectArea.length,numHemiLights:r.hemi.length,numClippingPlanes:l,numClipIntersection:h,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&c.receiveShadow&&0<o.length,shadowMapType:t.shadowMap.type,toneMapping:t.toneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:2===e.side,flipSided:1===e.side,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCode=function(e,i){var n=[];if(i.shaderID?n.push(i.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(var r in e.defines)n.push(r),n.push(e.defines[r]);for(r=0;r<o.length;r++)n.push(i[o[r]]);return n.push(e.onBeforeCompile.toString()),n.push(t.gammaOutput),n.join()},this.acquireProgram=function(i,n,a,o){for(var s,l=0,h=r.length;l<h;l++){var c=r[l];if(c.code===o){++(s=c).usedTimes;break}}return void 0===s&&(s=new ie(t,e,o,i,n,a),r.push(s)),s},this.releaseProgram=function(t){if(0==--t.usedTimes){var e=r.indexOf(t);r[e]=r[r.length-1],r.pop(),t.destroy()}},this.programs=r}function re(t,e,i,n,r,a,o){function s(t,e){if(t.width>e||t.height>e){e/=Math.max(t.width,t.height);var i=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return i.width=Math.floor(t.width*e),i.height=Math.floor(t.height*e),i.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,i.width,i.height),console.warn("THREE.WebGLRenderer: image is too big ("+t.width+"x"+t.height+"). Resized to "+i.width+"x"+i.height,t),i}return t}function l(t){return we.isPowerOfTwo(t.width)&&we.isPowerOfTwo(t.height)}function h(t,e){return t.generateMipmaps&&e&&1003!==t.minFilter&&1006!==t.minFilter}function c(e){return 1003===e||1004===e||1005===e?t.NEAREST:t.LINEAR}function u(e){(e=e.target).removeEventListener("dispose",u);t:{var i=n.get(e);if(e.image&&i.__image__webglTextureCube)t.deleteTexture(i.__image__webglTextureCube);else{if(void 0===i.__webglInit)break t;t.deleteTexture(i.__webglTexture)}n.remove(e)}o.textures--}function d(e){(e=e.target).removeEventListener("dispose",d);var i=n.get(e),r=n.get(e.texture);if(e){if(void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLRenderTargetCube)for(r=0;6>r;r++)t.deleteFramebuffer(i.__webglFramebuffer[r]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[r]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer);n.remove(e.texture),n.remove(e)}o.textures--}function f(e,c){var d=n.get(e);if(0<e.version&&d.__version!==e.version)if(void 0===(m=e.image))console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",e);else{if(!1!==m.complete){void 0===d.__webglInit&&(d.__webglInit=!0,e.addEventListener("dispose",u),d.__webglTexture=t.createTexture(),o.textures++),i.activeTexture(t.TEXTURE0+c),i.bindTexture(t.TEXTURE_2D,d.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,e.unpackAlignment);var f=s(e.image,r.maxTextureSize);(1001!==e.wrapS||1001!==e.wrapT||1003!==e.minFilter&&1006!==e.minFilter)&&!1===l(f)&&((c=f)instanceof HTMLImageElement||c instanceof HTMLCanvasElement?(m=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),m.width=we.nearestPowerOfTwo(c.width),m.height=we.nearestPowerOfTwo(c.height),m.getContext("2d").drawImage(c,0,0,m.width,m.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+c.width+"x"+c.height+"). Resized to "+m.width+"x"+m.height,c),f=m):f=c),c=l(f);var m=a.convert(e.format),g=a.convert(e.type);p(t.TEXTURE_2D,e,c);var x=e.mipmaps;if(e.isDepthTexture){if(x=t.DEPTH_COMPONENT,1015===e.type){if(!v)throw Error("Float Depth Texture only supported in WebGL2.0");x=t.DEPTH_COMPONENT32F}else v&&(x=t.DEPTH_COMPONENT16);1026===e.format&&x===t.DEPTH_COMPONENT&&1012!==e.type&&1014!==e.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),e.type=1012,g=a.convert(e.type)),1027===e.format&&(x=t.DEPTH_STENCIL,1020!==e.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),e.type=1020,g=a.convert(e.type))),i.texImage2D(t.TEXTURE_2D,0,x,f.width,f.height,0,m,g,null)}else if(e.isDataTexture)if(0<x.length&&c){for(var _=0,y=x.length;_<y;_++)f=x[_],i.texImage2D(t.TEXTURE_2D,_,m,f.width,f.height,0,m,g,f.data);e.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,m,f.width,f.height,0,m,g,f.data);else if(e.isCompressedTexture)for(_=0,y=x.length;_<y;_++)f=x[_],1023!==e.format&&1022!==e.format?-1<i.getCompressedTextureFormats().indexOf(m)?i.compressedTexImage2D(t.TEXTURE_2D,_,m,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texImage2D(t.TEXTURE_2D,_,m,f.width,f.height,0,m,g,f.data);else if(0<x.length&&c){for(_=0,y=x.length;_<y;_++)f=x[_],i.texImage2D(t.TEXTURE_2D,_,m,m,g,f);e.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,m,m,g,f);return h(e,c)&&t.generateMipmap(t.TEXTURE_2D),d.__version=e.version,void(e.onUpdate&&e.onUpdate(e))}console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",e)}i.activeTexture(t.TEXTURE0+c),i.bindTexture(t.TEXTURE_2D,d.__webglTexture)}function p(i,o,s){s?(t.texParameteri(i,t.TEXTURE_WRAP_S,a.convert(o.wrapS)),t.texParameteri(i,t.TEXTURE_WRAP_T,a.convert(o.wrapT)),t.texParameteri(i,t.TEXTURE_MAG_FILTER,a.convert(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,a.convert(o.minFilter))):(t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),1001===o.wrapS&&1001===o.wrapT||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",o),t.texParameteri(i,t.TEXTURE_MAG_FILTER,c(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,c(o.minFilter)),1003!==o.minFilter&&1006!==o.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",o)),!(s=e.get("EXT_texture_filter_anisotropic"))||1015===o.type&&null===e.get("OES_texture_float_linear")||1016===o.type&&null===e.get("OES_texture_half_float_linear")||!(1<o.anisotropy||n.get(o).__currentAnisotropy)||(t.texParameterf(i,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,r.getMaxAnisotropy())),n.get(o).__currentAnisotropy=o.anisotropy)}function m(e,r,o,s){var l=a.convert(r.texture.format),h=a.convert(r.texture.type);i.texImage2D(s,0,l,r.width,r.height,0,l,h,null),t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,o,s,n.get(r.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}function g(e,i){t.bindRenderbuffer(t.RENDERBUFFER,e),i.depthBuffer&&!i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)):i.depthBuffer&&i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)):t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i.width,i.height),t.bindRenderbuffer(t.RENDERBUFFER,null)}var v="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext;this.setTexture2D=f,this.setTextureCube=function(e,c){var d=n.get(e);if(6===e.image.length)if(0<e.version&&d.__version!==e.version){d.__image__webglTextureCube||(e.addEventListener("dispose",u),d.__image__webglTextureCube=t.createTexture(),o.textures++),i.activeTexture(t.TEXTURE0+c),i.bindTexture(t.TEXTURE_CUBE_MAP,d.__image__webglTextureCube),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY),c=e&&e.isCompressedTexture;for(var f=e.image[0]&&e.image[0].isDataTexture,m=[],g=0;6>g;g++)m[g]=c||f?f?e.image[g].image:e.image[g]:s(e.image[g],r.maxCubemapSize);var v=l(m[0]),x=a.convert(e.format),_=a.convert(e.type);for(p(t.TEXTURE_CUBE_MAP,e,v),g=0;6>g;g++)if(c)for(var y,M=m[g].mipmaps,E=0,b=M.length;E<b;E++)y=M[E],1023!==e.format&&1022!==e.format?-1<i.getCompressedTextureFormats().indexOf(x)?i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,E,x,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,E,x,y.width,y.height,0,x,_,y.data);else f?i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,x,m[g].width,m[g].height,0,x,_,m[g].data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,x,x,_,m[g]);h(e,v)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),d.__version=e.version,e.onUpdate&&e.onUpdate(e)}else i.activeTexture(t.TEXTURE0+c),i.bindTexture(t.TEXTURE_CUBE_MAP,d.__image__webglTextureCube)},this.setTextureCubeDynamic=function(e,r){i.activeTexture(t.TEXTURE0+r),i.bindTexture(t.TEXTURE_CUBE_MAP,n.get(e).__webglTexture)},this.setupRenderTarget=function(e){var r=n.get(e),a=n.get(e.texture);e.addEventListener("dispose",d),a.__webglTexture=t.createTexture(),o.textures++;var s=!0===e.isWebGLRenderTargetCube,c=l(e);if(s){r.__webglFramebuffer=[];for(var u=0;6>u;u++)r.__webglFramebuffer[u]=t.createFramebuffer()}else r.__webglFramebuffer=t.createFramebuffer();if(s){for(i.bindTexture(t.TEXTURE_CUBE_MAP,a.__webglTexture),p(t.TEXTURE_CUBE_MAP,e.texture,c),u=0;6>u;u++)m(r.__webglFramebuffer[u],e,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+u);h(e.texture,c)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),i.bindTexture(t.TEXTURE_CUBE_MAP,null)}else i.bindTexture(t.TEXTURE_2D,a.__webglTexture),p(t.TEXTURE_2D,e.texture,c),m(r.__webglFramebuffer,e,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),h(e.texture,c)&&t.generateMipmap(t.TEXTURE_2D),i.bindTexture(t.TEXTURE_2D,null);if(e.depthBuffer){if(r=n.get(e),a=!0===e.isWebGLRenderTargetCube,e.depthTexture){if(a)throw Error("target.depthTexture not supported in Cube render targets");if(e&&e.isWebGLRenderTargetCube)throw Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),!e.depthTexture||!e.depthTexture.isDepthTexture)throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");if(n.get(e.depthTexture).__webglTexture&&e.depthTexture.image.width===e.width&&e.depthTexture.image.height===e.height||(e.depthTexture.image.width=e.width,e.depthTexture.image.height=e.height,e.depthTexture.needsUpdate=!0),f(e.depthTexture,0),r=n.get(e.depthTexture).__webglTexture,1026===e.depthTexture.format)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0);else{if(1027!==e.depthTexture.format)throw Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0)}}else if(a)for(r.__webglDepthbuffer=[],a=0;6>a;a++)t.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer[a]),r.__webglDepthbuffer[a]=t.createRenderbuffer(),g(r.__webglDepthbuffer[a],e);else t.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),g(r.__webglDepthbuffer,e);t.bindFramebuffer(t.FRAMEBUFFER,null)}},this.updateRenderTargetMipmap=function(e){var r=e.texture;h(r,l(e))&&(e=e.isWebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,r=n.get(r).__webglTexture,i.bindTexture(e,r),t.generateMipmap(e),i.bindTexture(e,null))}}function ae(){var t={};return{get:function(e){e=e.uuid;var i=t[e];return void 0===i&&(i={},t[e]=i),i},remove:function(e){delete t[e.uuid]},clear:function(){t={}}}}function oe(t,e,i){function n(e,i,n){var r=new Uint8Array(4),a=t.createTexture();for(t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST),e=0;e<n;e++)t.texImage2D(i+e,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,r);return a}function a(e){!0!==_[e]&&(t.enable(e),_[e]=!0)}function o(e){!1!==_[e]&&(t.disable(e),_[e]=!1)}function s(e,n,r,s,l,h,c,u){if(0!==e?a(t.BLEND):o(t.BLEND),5!==e){if(e!==E||u!==R)switch(e){case 2:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE));break;case 3:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR));break;case 4:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.SRC_COLOR));break;default:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA))}L=A=S=T=w=b=null}else l=l||n,h=h||r,c=c||s,n===b&&l===S||(t.blendEquationSeparate(i.convert(n),i.convert(l)),b=n,S=l),r===w&&s===T&&h===A&&c===L||(t.blendFuncSeparate(i.convert(r),i.convert(s),i.convert(h),i.convert(c)),w=r,T=s,A=h,L=c);E=e,R=u}function l(e){P!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),P=e)}function h(e){0!==e?(a(t.CULL_FACE),e!==C&&(1===e?t.cullFace(t.BACK):2===e?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):o(t.CULL_FACE),C=e}function c(e,i,n){e?(a(t.POLYGON_OFFSET_FILL),(N!==i||D!==n)&&(t.polygonOffset(i,n),N=i,D=n)):o(t.POLYGON_OFFSET_FILL)}function u(e){void 0===e&&(e=t.TEXTURE0+I-1),z!==e&&(t.activeTexture(e),z=e)}var d=new function(){var e=!1,i=new r,n=null,a=new r(0,0,0,0);return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,r,o,s){!0===s&&(e*=o,n*=o,r*=o),i.set(e,n,r,o),!1===a.equals(i)&&(t.clearColor(e,n,r,o),a.copy(i))},reset:function(){e=!1,n=null,a.set(-1,0,0,0)}}},f=new function(){var e=!1,i=null,n=null,r=null;return{setTest:function(e){e?a(t.DEPTH_TEST):o(t.DEPTH_TEST)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n!==e){if(e)switch(e){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);n=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,r=n=i=null}}},p=new function(){var e=!1,i=null,n=null,r=null,s=null,l=null,h=null,c=null,u=null;return{setTest:function(e){e?a(t.STENCIL_TEST):o(t.STENCIL_TEST)},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,a){n===e&&r===i&&s===a||(t.stencilFunc(e,i,a),n=e,r=i,s=a)},setOp:function(e,i,n){l===e&&h===i&&c===n||(t.stencilOp(e,i,n),l=e,h=i,c=n)},setLocked:function(t){e=t},setClear:function(e){u!==e&&(t.clearStencil(e),u=e)},reset:function(){e=!1,u=c=h=l=s=r=n=i=null}}},m=t.getParameter(t.MAX_VERTEX_ATTRIBS),g=new Uint8Array(m),v=new Uint8Array(m),x=new Uint8Array(m),_={},y=null,M=null,E=null,b=null,w=null,T=null,S=null,A=null,L=null,R=!1,P=null,C=null,U=null,N=null,D=null,I=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),m=parseFloat(/^WebGL\ ([0-9])/.exec(t.getParameter(t.VERSION))[1]),F=1<=parseFloat(m),z=null,O={},B=new r,G=new r,V={};return V[t.TEXTURE_2D]=n(t.TEXTURE_2D,t.TEXTURE_2D,1),V[t.TEXTURE_CUBE_MAP]=n(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),d.setClear(0,0,0,1),f.setClear(1),p.setClear(0),a(t.DEPTH_TEST),f.setFunc(3),l(!1),h(1),a(t.CULL_FACE),a(t.BLEND),s(1),{buffers:{color:d,depth:f,stencil:p},initAttributes:function(){for(var t=0,e=g.length;t<e;t++)g[t]=0},enableAttribute:function(i){g[i]=1,0===v[i]&&(t.enableVertexAttribArray(i),v[i]=1),0!==x[i]&&(e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,0),x[i]=0)},enableAttributeAndDivisor:function(i,n){g[i]=1,0===v[i]&&(t.enableVertexAttribArray(i),v[i]=1),x[i]!==n&&(e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,n),x[i]=n)},disableUnusedAttributes:function(){for(var e=0,i=v.length;e!==i;++e)v[e]!==g[e]&&(t.disableVertexAttribArray(e),v[e]=0)},enable:a,disable:o,getCompressedTextureFormats:function(){if(null===y&&(y=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")))for(var i=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),n=0;n<i.length;n++)y.push(i[n]);return y},useProgram:function(e){return M!==e&&(t.useProgram(e),M=e,!0)},setBlending:s,setMaterial:function(e){2===e.side?o(t.CULL_FACE):a(t.CULL_FACE),l(1===e.side),!0===e.transparent?s(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):s(0),f.setFunc(e.depthFunc),f.setTest(e.depthTest),f.setMask(e.depthWrite),d.setMask(e.colorWrite),c(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:l,setCullFace:h,setLineWidth:function(e){e!==U&&(F&&t.lineWidth(e),U=e)},setPolygonOffset:c,setScissorTest:function(e){e?a(t.SCISSOR_TEST):o(t.SCISSOR_TEST)},activeTexture:u,bindTexture:function(e,i){null===z&&u();var n=O[z];void 0===n&&(n={type:void 0,texture:void 0},O[z]=n),n.type===e&&n.texture===i||(t.bindTexture(e,i||V[e]),n.type=e,n.texture=i)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===B.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),B.copy(e))},viewport:function(e){!1===G.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),G.copy(e))},reset:function(){for(var e=0;e<v.length;e++)1===v[e]&&(t.disableVertexAttribArray(e),v[e]=0);_={},z=y=null,O={},C=P=E=M=null,d.reset(),f.reset(),p.reset()}}}function se(t,e,i){function n(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision?"mediump":"lowp"}var r,a=void 0!==i.precision?i.precision:"highp";(o=n(a))!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",o,"instead."),a=o),i=!0===i.logarithmicDepthBuffer&&!!e.get("EXT_frag_depth");var o=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),s=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),l=t.getParameter(t.MAX_TEXTURE_SIZE),h=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),c=t.getParameter(t.MAX_VERTEX_ATTRIBS),u=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),d=t.getParameter(t.MAX_VARYING_VECTORS),f=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),p=0<s,m=!!e.get("OES_texture_float");return{getMaxAnisotropy:function(){if(void 0!==r)return r;var i=e.get("EXT_texture_filter_anisotropic");return r=null!==i?t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:n,precision:a,logarithmicDepthBuffer:i,maxTextures:o,maxVertexTextures:s,maxTextureSize:l,maxCubemapSize:h,maxAttributes:c,maxVertexUniforms:u,maxVaryings:d,maxFragmentUniforms:f,vertexTextures:p,floatFragmentTextures:m,floatVertexTextures:p&&m}}function le(t){ht.call(this),this.cameras=t||[]}function he(t){function e(){if(null!==n&&n.isPresenting){var e=(r=n.getEyeParameters("left")).renderWidth,r=r.renderHeight;p=t.getPixelRatio(),f=t.getSize(),t.setDrawingBufferSize(2*e,r,1)}else i.enabled&&t.setDrawingBufferSize(f.width,f.height,p)}var i=this,n=null,a=null;"VRFrameData"in window&&(a=new window.VRFrameData);var o=new l,s=new l,h=new l,c=new ht;c.bounds=new r(0,0,.5,1),c.layers.enable(1);var u=new ht;u.bounds=new r(.5,0,.5,1),u.layers.enable(2);var d=new le([c,u]);d.layers.enable(1),d.layers.enable(2);var f,p;window.addEventListener("vrdisplaypresentchange",e,!1),this.standing=this.enabled=!1,this.getDevice=function(){return n},this.setDevice=function(t){void 0!==t&&(n=t)},this.getCamera=function(t){if(null===n)return t;n.depthNear=t.near,n.depthFar=t.far,n.getFrameData(a);var e=a.pose;return null!==e.position?t.position.fromArray(e.position):t.position.set(0,0,0),null!==e.orientation&&t.quaternion.fromArray(e.orientation),t.updateMatrixWorld(),e=n.stageParameters,this.standing&&e&&(s.fromArray(e.sittingToStandingTransform),h.getInverse(s),t.matrixWorld.multiply(s),t.matrixWorldInverse.multiply(h)),!1===n.isPresenting?t:(c.near=t.near,u.near=t.near,c.far=t.far,u.far=t.far,d.matrixWorld.copy(t.matrixWorld),d.matrixWorldInverse.copy(t.matrixWorldInverse),c.matrixWorldInverse.fromArray(a.leftViewMatrix),u.matrixWorldInverse.fromArray(a.rightViewMatrix),this.standing&&e&&(c.matrixWorldInverse.multiply(h),u.matrixWorldInverse.multiply(h)),null!==(t=t.parent)&&(o.getInverse(t.matrixWorld),c.matrixWorldInverse.multiply(o),u.matrixWorldInverse.multiply(o)),c.matrixWorld.getInverse(c.matrixWorldInverse),u.matrixWorld.getInverse(u.matrixWorldInverse),c.projectionMatrix.fromArray(a.leftProjectionMatrix),u.projectionMatrix.fromArray(a.rightProjectionMatrix),d.projectionMatrix.copy(c.projectionMatrix),(t=n.getLayers()).length&&(null!==(t=t[0]).leftBounds&&4===t.leftBounds.length&&c.bounds.fromArray(t.leftBounds),null!==t.rightBounds&&4===t.rightBounds.length&&u.bounds.fromArray(t.rightBounds)),d)},this.getStandingMatrix=function(){return s},this.submitFrame=function(){n&&n.isPresenting&&n.submitFrame()},this.dispose=function(){window.removeEventListener("vrdisplaypresentchange",e)}}function ce(t){var e={};return{get:function(i){if(void 0!==e[i])return e[i];switch(i){case"WEBGL_depth_texture":var n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":n=t.getExtension("WEBGL_compressed_texture_etc1");break;default:n=t.getExtension(i)}return null===n&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),e[i]=n}}}function ue(){function t(){h.value!==n&&(h.value=n,h.needsUpdate=0<r),i.numPlanes=r,i.numIntersection=0}function e(t,e,n,r){var a=null!==t?t.length:0,o=null;if(0!==a){if(o=h.value,!0!==r||null===o)for(r=n+4*a,e=e.matrixWorldInverse,l.getNormalMatrix(e),(null===o||o.length<r)&&(o=new Float32Array(r)),r=0;r!==a;++r,n+=4)s.copy(t[r]).applyMatrix4(e,l),s.normal.toArray(o,n),o[n+3]=s.constant;h.value=o,h.needsUpdate=!0}return i.numPlanes=a,o}var i=this,n=null,r=0,a=!1,o=!1,s=new tt,l=new $,h={value:null,needsUpdate:!1};this.uniform=h,this.numIntersection=this.numPlanes=0,this.init=function(t,i,o){var s=0!==t.length||i||0!==r||a;return a=i,n=e(t,o,0),r=t.length,s},this.beginShadows=function(){o=!0,e(null)},this.endShadows=function(){o=!1,t()},this.setState=function(i,s,l,c,u,d){if(!a||null===i||0===i.length||o&&!l)o?e(null):t();else{var f=4*(l=o?0:r),p=u.clippingState||null;for(h.value=p,p=e(i,c,f,d),i=0;i!==f;++i)p[i]=n[i];u.clippingState=p,this.numIntersection=s?this.numPlanes:0,this.numPlanes+=l}}}function de(t,e){return{convert:function(i){if(1e3===i)return t.REPEAT;if(1001===i)return t.CLAMP_TO_EDGE;if(1002===i)return t.MIRRORED_REPEAT;if(1003===i)return t.NEAREST;if(1004===i)return t.NEAREST_MIPMAP_NEAREST;if(1005===i)return t.NEAREST_MIPMAP_LINEAR;if(1006===i)return t.LINEAR;if(1007===i)return t.LINEAR_MIPMAP_NEAREST;if(1008===i)return t.LINEAR_MIPMAP_LINEAR;if(1009===i)return t.UNSIGNED_BYTE;if(1017===i)return t.UNSIGNED_SHORT_4_4_4_4;if(1018===i)return t.UNSIGNED_SHORT_5_5_5_1;if(1019===i)return t.UNSIGNED_SHORT_5_6_5;if(1010===i)return t.BYTE;if(1011===i)return t.SHORT;if(1012===i)return t.UNSIGNED_SHORT;if(1013===i)return t.INT;if(1014===i)return t.UNSIGNED_INT;if(1015===i)return t.FLOAT;if(1016===i){var n=e.get("OES_texture_half_float");if(null!==n)return n.HALF_FLOAT_OES}if(1021===i)return t.ALPHA;if(1022===i)return t.RGB;if(1023===i)return t.RGBA;if(1024===i)return t.LUMINANCE;if(1025===i)return t.LUMINANCE_ALPHA;if(1026===i)return t.DEPTH_COMPONENT;if(1027===i)return t.DEPTH_STENCIL;if(100===i)return t.FUNC_ADD;if(101===i)return t.FUNC_SUBTRACT;if(102===i)return t.FUNC_REVERSE_SUBTRACT;if(200===i)return t.ZERO;if(201===i)return t.ONE;if(202===i)return t.SRC_COLOR;if(203===i)return t.ONE_MINUS_SRC_COLOR;if(204===i)return t.SRC_ALPHA;if(205===i)return t.ONE_MINUS_SRC_ALPHA;if(206===i)return t.DST_ALPHA;if(207===i)return t.ONE_MINUS_DST_ALPHA;if(208===i)return t.DST_COLOR;if(209===i)return t.ONE_MINUS_DST_COLOR;if(210===i)return t.SRC_ALPHA_SATURATE;if((2001===i||2002===i||2003===i||2004===i)&&null!==(n=e.get("WEBGL_compressed_texture_s3tc"))){if(2001===i)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(2002===i)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(2003===i)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(2004===i)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((2100===i||2101===i||2102===i||2103===i)&&null!==(n=e.get("WEBGL_compressed_texture_pvrtc"))){if(2100===i)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(2101===i)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(2102===i)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(2103===i)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(2151===i&&null!==(n=e.get("WEBGL_compressed_texture_etc1")))return n.COMPRESSED_RGB_ETC1_WEBGL;if((103===i||104===i)&&null!==(n=e.get("EXT_blend_minmax"))){if(103===i)return n.MIN_EXT;if(104===i)return n.MAX_EXT}return 1020===i&&null!==(n=e.get("WEBGL_depth_texture"))?n.UNSIGNED_INT_24_8_WEBGL:0}}}function fe(t){function e(){(ut=new ce(ct)).get("WEBGL_depth_texture"),ut.get("OES_texture_float"),ut.get("OES_texture_float_linear"),ut.get("OES_texture_half_float"),ut.get("OES_texture_half_float_linear"),ut.get("OES_standard_derivatives"),ut.get("ANGLE_instanced_arrays"),ut.get("OES_element_index_uint")&&(wt.MaxIndex=4294967296),Rt=new de(ct,ut),dt=new se(ct,ut,t),(ft=new oe(ct,ut,Rt)).scissor(H.copy(Q).multiplyScalar(Z)),ft.viewport(G.copy(J).multiplyScalar(Z)),pt=new ae,mt=new re(ct,ut,ft,pt,dt,Rt,lt),gt=new nt(ct),vt=new Gt(ct,gt,lt),xt=new kt(vt,ht),bt=new zt(ct),yt=new ne(U,ut,dt),_t=new Ht,Mt=new It,Et=new Ct(U,ft,vt,T),Tt=new Bt(ct,ut,ht),St=new Ot(ct,ut,ht),At=new W(U,ct,ft,mt,dt),Lt=new Y(U,ct,ft,mt,dt),U.info.programs=yt.programs,U.context=ct,U.capabilities=dt,U.extensions=ut,U.properties=pt,U.renderLists=Mt,U.state=ft}function i(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),N=!0}function n(t){console.log("THREE.WebGLRenderer: Context Restored."),N=!1,e()}function a(t){(t=t.target).removeEventListener("dispose",a),o(t),pt.remove(t)}function o(t){var e=pt.get(t).program;t.program=void 0,void 0!==e&&yt.releaseProgram(e)}function c(t,e,i){t.render(function(t){U.renderBufferImmediate(t,e,i)})}function u(t){null!==Dt&&Dt(t),(Pt.getDevice()||window).requestAnimationFrame(u)}function d(t,e,i){if(t.visible){if(t.layers.test(e.layers))if(t.isLight)A.push(t),t.castShadow&&L.push(t);else if(t.isSprite)t.frustumCulled&&!$.intersectsSprite(t)||P.push(t);else if(t.isLensFlare)C.push(t);else if(t.isImmediateRenderObject)i&&st.setFromMatrixPosition(t.matrixWorld).applyMatrix4(ot),R.push(t,null,t.material,st.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.update(),!t.frustumCulled||$.intersectsObject(t))){i&&st.setFromMatrixPosition(t.matrixWorld).applyMatrix4(ot);var n=xt.update(t),r=t.material;if(Array.isArray(r))for(var a=n.groups,o=0,s=a.length;o<s;o++){var l=a[o],h=r[l.materialIndex];h&&h.visible&&R.push(t,n,h,st.z,l)}else r.visible&&R.push(t,n,r,st.z,null)}for(o=0,s=(t=t.children).length;o<s;o++)d(t[o],e,i)}}function f(t,e,i,n){for(var r=0,a=t.length;r<a;r++){var o=(h=t[r]).object,s=h.geometry,l=void 0===n?h.material:n,h=h.group;if(i.isArrayCamera){B=i;for(var c=i.cameras,u=0,d=c.length;u<d;u++){var f=c[u];if(o.layers.test(f.layers)){var m=f.bounds;ft.viewport(G.set(m.x*j,m.y*q,m.z*j,m.w*q).multiplyScalar(Z)),p(o,e,f,s,l,h)}}}else B=null,p(o,e,i,s,l,h)}}function p(t,e,i,n,r,a){if(t.onBeforeRender(U,e,i,n,r,a),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){ft.setMaterial(r);var o=g(i,e.fog,r,t);z="",c(t,o,r)}else U.renderBufferDirect(i,e.fog,n,r,t,a);t.onAfterRender(U,e,i,n,r,a)}function m(t,e,i){var n=pt.get(t);i=yt.getParameters(t,_t.state,L,e,tt.numPlanes,tt.numIntersection,i);var r=yt.getProgramCode(t,i),s=n.program,l=!0;if(void 0===s)t.addEventListener("dispose",a);else if(s.code!==r)o(t);else{if(void 0!==i.shaderID)return;l=!1}if(l&&(i.shaderID?(s=Fe[i.shaderID],n.shader={name:t.type,uniforms:De.clone(s.uniforms),vertexShader:s.vertexShader,fragmentShader:s.fragmentShader}):n.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader},t.onBeforeCompile(n.shader),s=yt.acquireProgram(t,n.shader,i,r),n.program=s,t.program=s),i=s.getAttributes(),t.morphTargets)for(r=t.numSupportedMorphTargets=0;r<U.maxMorphTargets;r++)0<=i["morphTarget"+r]&&t.numSupportedMorphTargets++;if(t.morphNormals)for(r=t.numSupportedMorphNormals=0;r<U.maxMorphNormals;r++)0<=i["morphNormal"+r]&&t.numSupportedMorphNormals++;i=n.shader.uniforms,(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(n.numClippingPlanes=tt.numPlanes,n.numIntersection=tt.numIntersection,i.clippingPlanes=tt.uniform),n.fog=e,n.lightsHash=_t.state.hash,t.lights&&(i.ambientLightColor.value=_t.state.ambient,i.directionalLights.value=_t.state.directional,i.spotLights.value=_t.state.spot,i.rectAreaLights.value=_t.state.rectArea,i.pointLights.value=_t.state.point,i.hemisphereLights.value=_t.state.hemi,i.directionalShadowMap.value=_t.state.directionalShadowMap,i.directionalShadowMatrix.value=_t.state.directionalShadowMatrix,i.spotShadowMap.value=_t.state.spotShadowMap,i.spotShadowMatrix.value=_t.state.spotShadowMatrix,i.pointShadowMap.value=_t.state.pointShadowMap,i.pointShadowMatrix.value=_t.state.pointShadowMatrix),t=n.program.getUniforms(),t=V.seqWithValue(t.seq,i),n.uniformsList=t}function g(t,e,i,n){X=0;var r=pt.get(i);rt&&(at||t!==O)&&tt.setState(i.clippingPlanes,i.clipIntersection,i.clipShadows,t,r,t===O&&i.id===F),!1===i.needsUpdate&&(void 0===r.program?i.needsUpdate=!0:i.fog&&r.fog!==e?i.needsUpdate=!0:i.lights&&r.lightsHash!==_t.state.hash?i.needsUpdate=!0:void 0===r.numClippingPlanes||r.numClippingPlanes===tt.numPlanes&&r.numIntersection===tt.numIntersection||(i.needsUpdate=!0)),i.needsUpdate&&(m(i,e,n),i.needsUpdate=!1);var a=!1,o=!1,s=!1,l=r.program,c=l.getUniforms(),u=r.shader.uniforms;if(ft.useProgram(l.program)&&(s=o=a=!0),i.id!==F&&(F=i.id,o=!0),(a||t!==O)&&(c.setValue(ct,"projectionMatrix",t.projectionMatrix),dt.logarithmicDepthBuffer&&c.setValue(ct,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),O!==(B||t)&&(O=B||t,s=o=!0),(i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial||i.envMap)&&void 0!==(a=c.map.cameraPosition)&&a.setValue(ct,st.setFromMatrixPosition(t.matrixWorld)),(i.isMeshPhongMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.skinning)&&c.setValue(ct,"viewMatrix",t.matrixWorldInverse)),i.skinning&&(c.setOptional(ct,n,"bindMatrix"),c.setOptional(ct,n,"bindMatrixInverse"),t=n.skeleton))if(a=t.bones,dt.floatVertexTextures){if(void 0===t.boneTexture){var a=Math.sqrt(4*a.length),a=we.nextPowerOfTwo(Math.ceil(a)),a=Math.max(a,4),d=new Float32Array(a*a*4);d.set(t.boneMatrices);var f=new h(d,a,a,1023,1015);t.boneMatrices=d,t.boneTexture=f,t.boneTextureSize=a}c.setValue(ct,"boneTexture",t.boneTexture),c.setValue(ct,"boneTextureSize",t.boneTextureSize)}else c.setOptional(ct,t,"boneMatrices");return o&&(c.setValue(ct,"toneMappingExposure",U.toneMappingExposure),c.setValue(ct,"toneMappingWhitePoint",U.toneMappingWhitePoint),i.lights&&(o=s,u.ambientLightColor.needsUpdate=o,u.directionalLights.needsUpdate=o,u.pointLights.needsUpdate=o,u.spotLights.needsUpdate=o,u.rectAreaLights.needsUpdate=o,u.hemisphereLights.needsUpdate=o),e&&i.fog&&(u.fogColor.value=e.color,e.isFog?(u.fogNear.value=e.near,u.fogFar.value=e.far):e.isFogExp2&&(u.fogDensity.value=e.density)),i.isMeshBasicMaterial?v(u,i):i.isMeshLambertMaterial?(v(u,i),i.emissiveMap&&(u.emissiveMap.value=i.emissiveMap)):i.isMeshPhongMaterial?(v(u,i),i.isMeshToonMaterial?(x(u,i),i.gradientMap&&(u.gradientMap.value=i.gradientMap)):x(u,i)):i.isMeshStandardMaterial?(v(u,i),i.isMeshPhysicalMaterial&&(u.clearCoat.value=i.clearCoat,u.clearCoatRoughness.value=i.clearCoatRoughness),u.roughness.value=i.roughness,u.metalness.value=i.metalness,i.roughnessMap&&(u.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(u.metalnessMap.value=i.metalnessMap),i.emissiveMap&&(u.emissiveMap.value=i.emissiveMap),i.bumpMap&&(u.bumpMap.value=i.bumpMap,u.bumpScale.value=i.bumpScale),i.normalMap&&(u.normalMap.value=i.normalMap,u.normalScale.value.copy(i.normalScale)),i.displacementMap&&(u.displacementMap.value=i.displacementMap,u.displacementScale.value=i.displacementScale,u.displacementBias.value=i.displacementBias),i.envMap&&(u.envMapIntensity.value=i.envMapIntensity)):i.isMeshDepthMaterial?(v(u,i),i.displacementMap&&(u.displacementMap.value=i.displacementMap,u.displacementScale.value=i.displacementScale,u.displacementBias.value=i.displacementBias)):i.isMeshDistanceMaterial?(v(u,i),i.displacementMap&&(u.displacementMap.value=i.displacementMap,u.displacementScale.value=i.displacementScale,u.displacementBias.value=i.displacementBias),u.referencePosition.value.copy(i.referencePosition),u.nearDistance.value=i.nearDistance,u.farDistance.value=i.farDistance):i.isMeshNormalMaterial?(v(u,i),i.bumpMap&&(u.bumpMap.value=i.bumpMap,u.bumpScale.value=i.bumpScale),i.normalMap&&(u.normalMap.value=i.normalMap,u.normalScale.value.copy(i.normalScale)),i.displacementMap&&(u.displacementMap.value=i.displacementMap,u.displacementScale.value=i.displacementScale,u.displacementBias.value=i.displacementBias)):i.isLineBasicMaterial?(u.diffuse.value=i.color,u.opacity.value=i.opacity,i.isLineDashedMaterial&&(u.dashSize.value=i.dashSize,u.totalSize.value=i.dashSize+i.gapSize,u.scale.value=i.scale)):i.isPointsMaterial?(u.diffuse.value=i.color,u.opacity.value=i.opacity,u.size.value=i.size*Z,u.scale.value=.5*q,u.map.value=i.map,null!==i.map&&(e=i.map.offset,i=i.map.repeat,u.offsetRepeat.value.set(e.x,e.y,i.x,i.y))):i.isShadowMaterial&&(u.color.value=i.color,u.opacity.value=i.opacity),void 0!==u.ltcMat&&(u.ltcMat.value=Ne.LTC_MAT_TEXTURE),void 0!==u.ltcMag&&(u.ltcMag.value=Ne.LTC_MAG_TEXTURE),V.upload(ct,r.uniformsList,u,U)),c.setValue(ct,"modelViewMatrix",n.modelViewMatrix),c.setValue(ct,"normalMatrix",n.normalMatrix),c.setValue(ct,"modelMatrix",n.matrixWorld),l}function v(t,e){if(t.opacity.value=e.opacity,e.color&&(t.diffuse.value=e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap),e.envMap&&(t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap&&e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity),e.map)var i=e.map;else e.specularMap?i=e.specularMap:e.displacementMap?i=e.displacementMap:e.normalMap?i=e.normalMap:e.bumpMap?i=e.bumpMap:e.roughnessMap?i=e.roughnessMap:e.metalnessMap?i=e.metalnessMap:e.alphaMap?i=e.alphaMap:e.emissiveMap&&(i=e.emissiveMap);void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),e=i.offset,i=i.repeat,t.offsetRepeat.value.set(e.x,e.y,i.x,i.y))}function x(t,e){t.specular.value=e.specular,t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}console.log("THREE.WebGLRenderer","87");var _=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),y=void 0!==t.context?t.context:null,M=void 0!==t.alpha&&t.alpha,E=void 0===t.depth||t.depth,b=void 0===t.stencil||t.stencil,w=void 0!==t.antialias&&t.antialias,T=void 0===t.premultipliedAlpha||t.premultipliedAlpha,S=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,A=[],L=[],R=null,P=[],C=[];this.domElement=_,this.context=null,this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=!1,this.toneMappingWhitePoint=this.toneMappingExposure=this.toneMapping=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var U=this,N=!1,D=null,I=null,F=-1,z="",O=null,B=null,G=new r,H=new r,k=null,X=0,j=_.width,q=_.height,Z=1,J=new r(0,0,j,q),Q=new r(0,0,j,q),K=!1,$=new et,tt=new ue,rt=!1,at=!1,ot=new l,st=new s,lt={geometries:0,textures:0},ht={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:ht,memory:lt,programs:null};try{M={alpha:M,depth:E,stencil:b,antialias:w,premultipliedAlpha:T,preserveDrawingBuffer:S};var ct=y||_.getContext("webgl",M)||_.getContext("experimental-webgl",M);if(null===ct){if(null!==_.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context."}void 0===ct.getShaderPrecisionFormat&&(ct.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),_.addEventListener("webglcontextlost",i,!1),_.addEventListener("webglcontextrestored",n,!1)}catch(t){console.error("THREE.WebGLRenderer: "+t)}var ut,dt,ft,pt,mt,gt,vt,xt,_t,yt,Mt,Et,bt,Tt,St,At,Lt,Rt;e();var Pt=new he(U);this.vr=Pt;var Ut=new it(U,xt,dt.maxTextureSize);this.shadowMap=Ut,this.getContext=function(){return ct},this.getContextAttributes=function(){return ct.getContextAttributes()},this.forceContextLoss=function(){var t=ut.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=ut.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return Z},this.setPixelRatio=function(t){void 0!==t&&(Z=t,this.setSize(j,q,!1))},this.getSize=function(){return{width:j,height:q}},this.setSize=function(t,e,i){var n=Pt.getDevice();n&&n.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(j=t,q=e,_.width=t*Z,_.height=e*Z,!1!==i&&(_.style.width=t+"px",_.style.height=e+"px"),this.setViewport(0,0,t,e))},this.getDrawingBufferSize=function(){return{width:j*Z,height:q*Z}},this.setDrawingBufferSize=function(t,e,i){j=t,q=e,Z=i,_.width=t*i,_.height=e*i,this.setViewport(0,0,t,e)},this.setViewport=function(t,e,i,n){J.set(t,q-e-n,i,n),ft.viewport(G.copy(J).multiplyScalar(Z))},this.setScissor=function(t,e,i,n){Q.set(t,q-e-n,i,n),ft.scissor(H.copy(Q).multiplyScalar(Z))},this.setScissorTest=function(t){ft.setScissorTest(K=t)},this.getClearColor=Et.getClearColor,this.setClearColor=Et.setClearColor,this.getClearAlpha=Et.getClearAlpha,this.setClearAlpha=Et.setClearAlpha,this.clear=function(t,e,i){var n=0;(void 0===t||t)&&(n|=ct.COLOR_BUFFER_BIT),(void 0===e||e)&&(n|=ct.DEPTH_BUFFER_BIT),(void 0===i||i)&&(n|=ct.STENCIL_BUFFER_BIT),ct.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(t,e,i,n){this.setRenderTarget(t),this.clear(e,i,n)},this.dispose=function(){_.removeEventListener("webglcontextlost",i,!1),_.removeEventListener("webglcontextrestored",n,!1),Mt.dispose(),Pt.dispose()},this.renderBufferImmediate=function(t,e,i){ft.initAttributes();var n=pt.get(t);if(t.hasPositions&&!n.position&&(n.position=ct.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=ct.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=ct.createBuffer()),t.hasColors&&!n.color&&(n.color=ct.createBuffer()),e=e.getAttributes(),t.hasPositions&&(ct.bindBuffer(ct.ARRAY_BUFFER,n.position),ct.bufferData(ct.ARRAY_BUFFER,t.positionArray,ct.DYNAMIC_DRAW),ft.enableAttribute(e.position),ct.vertexAttribPointer(e.position,3,ct.FLOAT,!1,0,0)),t.hasNormals){if(ct.bindBuffer(ct.ARRAY_BUFFER,n.normal),!i.isMeshPhongMaterial&&!i.isMeshStandardMaterial&&!i.isMeshNormalMaterial&&!0===i.flatShading)for(var r=0,a=3*t.count;r<a;r+=9){var o=t.normalArray,s=(o[r+0]+o[r+3]+o[r+6])/3,l=(o[r+1]+o[r+4]+o[r+7])/3,h=(o[r+2]+o[r+5]+o[r+8])/3;o[r+0]=s,o[r+1]=l,o[r+2]=h,o[r+3]=s,o[r+4]=l,o[r+5]=h,o[r+6]=s,o[r+7]=l,o[r+8]=h}ct.bufferData(ct.ARRAY_BUFFER,t.normalArray,ct.DYNAMIC_DRAW),ft.enableAttribute(e.normal),ct.vertexAttribPointer(e.normal,3,ct.FLOAT,!1,0,0)}t.hasUvs&&i.map&&(ct.bindBuffer(ct.ARRAY_BUFFER,n.uv),ct.bufferData(ct.ARRAY_BUFFER,t.uvArray,ct.DYNAMIC_DRAW),ft.enableAttribute(e.uv),ct.vertexAttribPointer(e.uv,2,ct.FLOAT,!1,0,0)),t.hasColors&&0!==i.vertexColors&&(ct.bindBuffer(ct.ARRAY_BUFFER,n.color),ct.bufferData(ct.ARRAY_BUFFER,t.colorArray,ct.DYNAMIC_DRAW),ft.enableAttribute(e.color),ct.vertexAttribPointer(e.color,3,ct.FLOAT,!1,0,0)),ft.disableUnusedAttributes(),ct.drawArrays(ct.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,i,n,r,a){ft.setMaterial(n);var o=g(t,e,n,r),s=!1;(t=i.id+"_"+o.id+"_"+(!0===n.wireframe))!==z&&(z=t,s=!0),r.morphTargetInfluences&&(bt.update(r,i,n,o),s=!0);var l=i.index,h=i.attributes.position;if(e=1,!0===n.wireframe&&(l=vt.getWireframeAttribute(i),e=2),t=Tt,null!==l){var c=gt.get(l);(t=St).setIndex(c)}if(s){if(s=void 0,i&&i.isInstancedBufferGeometry&&null===ut.get("ANGLE_instanced_arrays"))console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");else{void 0===s&&(s=0),ft.initAttributes();var u=i.attributes,o=o.getAttributes(),d=n.defaultAttributeValues;for(b in o){var f=o[b];if(0<=f)if(void 0!==(E=u[b])){var p=E.normalized,m=E.itemSize;if(void 0!==(_=gt.get(E))){var v=_.buffer,x=_.type,_=_.bytesPerElement;if(E.isInterleavedBufferAttribute){var y=E.data,M=y.stride,E=E.offset;y&&y.isInstancedInterleavedBuffer?(ft.enableAttributeAndDivisor(f,y.meshPerAttribute),void 0===i.maxInstancedCount&&(i.maxInstancedCount=y.meshPerAttribute*y.count)):ft.enableAttribute(f),ct.bindBuffer(ct.ARRAY_BUFFER,v),ct.vertexAttribPointer(f,m,x,p,M*_,(s*M+E)*_)}else E.isInstancedBufferAttribute?(ft.enableAttributeAndDivisor(f,E.meshPerAttribute),void 0===i.maxInstancedCount&&(i.maxInstancedCount=E.meshPerAttribute*E.count)):ft.enableAttribute(f),ct.bindBuffer(ct.ARRAY_BUFFER,v),ct.vertexAttribPointer(f,m,x,p,0,s*m*_)}}else if(void 0!==d&&void 0!==(p=d[b]))switch(p.length){case 2:ct.vertexAttrib2fv(f,p);break;case 3:ct.vertexAttrib3fv(f,p);break;case 4:ct.vertexAttrib4fv(f,p);break;default:ct.vertexAttrib1fv(f,p)}}ft.disableUnusedAttributes()}null!==l&&ct.bindBuffer(ct.ELEMENT_ARRAY_BUFFER,c.buffer)}c=0,null!==l?c=l.count:void 0!==h&&(c=h.count),l=i.drawRange.start*e,h=null!==a?a.start*e:0;var b=Math.max(l,h);if(0!==(a=Math.max(0,Math.min(c,l+i.drawRange.count*e,h+(null!==a?a.count*e:1/0))-1-b+1))){if(r.isMesh)if(!0===n.wireframe)ft.setLineWidth(n.wireframeLinewidth*(null===D?Z:1)),t.setMode(ct.LINES);else switch(r.drawMode){case 0:t.setMode(ct.TRIANGLES);break;case 1:t.setMode(ct.TRIANGLE_STRIP);break;case 2:t.setMode(ct.TRIANGLE_FAN)}else r.isLine?(void 0===(n=n.linewidth)&&(n=1),ft.setLineWidth(n*(null===D?Z:1)),r.isLineSegments?t.setMode(ct.LINES):r.isLineLoop?t.setMode(ct.LINE_LOOP):t.setMode(ct.LINE_STRIP)):r.isPoints&&t.setMode(ct.POINTS);i&&i.isInstancedBufferGeometry?0<i.maxInstancedCount&&t.renderInstances(i,b,a):t.render(b,a)}},this.compile=function(t,e){A.length=0,L.length=0,t.traverse(function(t){t.isLight&&(A.push(t),t.castShadow&&L.push(t))}),_t.setup(A,L,e),t.traverse(function(e){if(e.material)if(Array.isArray(e.material))for(var i=0;i<e.material.length;i++)m(e.material[i],t.fog,e);else m(e.material,t.fog,e)})};var Nt=!1,Dt=null;this.animate=function(t){Dt=t,Nt||((Pt.getDevice()||window).requestAnimationFrame(u),Nt=!0)},this.render=function(t,e,i,n){if(e&&e.isCamera){if(!N){z="",F=-1,O=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),Pt.enabled&&(e=Pt.getCamera(e)),ot.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),$.setFromMatrix(ot),A.length=0,L.length=0,P.length=0,C.length=0,at=this.localClippingEnabled,rt=tt.init(this.clippingPlanes,at,e),(R=Mt.get(t,e)).init(),d(t,e,U.sortObjects),!0===U.sortObjects&&R.sort(),rt&&tt.beginShadows(),Ut.render(L,t,e),_t.setup(A,L,e),rt&&tt.endShadows(),ht.frame++,ht.calls=0,ht.vertices=0,ht.faces=0,ht.points=0,void 0===i&&(i=null),this.setRenderTarget(i),Et.render(R,t,e,n),n=R.opaque;var r=R.transparent;if(t.overrideMaterial){var a=t.overrideMaterial;n.length&&f(n,t,e,a),r.length&&f(r,t,e,a)}else n.length&&f(n,t,e),r.length&&f(r,t,e);Lt.render(P,t,e),At.render(C,t,e,G),i&&mt.updateRenderTargetMipmap(i),ft.buffers.depth.setTest(!0),ft.buffers.depth.setMask(!0),ft.buffers.color.setMask(!0),ft.setPolygonOffset(!1),Pt.enabled&&Pt.submitFrame()}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.setFaceCulling=function(t,e){ft.setCullFace(t),ft.setFlipSided(0===e)},this.allocTextureUnit=function(){var t=X;return t>=dt.maxTextures&&console.warn("THREE.WebGLRenderer: Trying to use "+t+" texture units while this GPU supports only "+dt.maxTextures),X+=1,t},this.setTexture2D=function(){var t=!1;return function(e,i){e&&e.isWebGLRenderTarget&&(t||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),mt.setTexture2D(e,i)}}(),this.setTexture=function(){var t=!1;return function(e,i){t||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),t=!0),mt.setTexture2D(e,i)}}(),this.setTextureCube=function(){var t=!1;return function(e,i){e&&e.isWebGLRenderTargetCube&&(t||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),t=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?mt.setTextureCube(e,i):mt.setTextureCubeDynamic(e,i)}}(),this.getRenderTarget=function(){return D},this.setRenderTarget=function(t){(D=t)&&void 0===pt.get(t).__webglFramebuffer&&mt.setupRenderTarget(t);var e=null,i=!1;t?(e=pt.get(t).__webglFramebuffer,t.isWebGLRenderTargetCube&&(e=e[t.activeCubeFace],i=!0),G.copy(t.viewport),H.copy(t.scissor),k=t.scissorTest):(G.copy(J).multiplyScalar(Z),H.copy(Q).multiplyScalar(Z),k=K),I!==e&&(ct.bindFramebuffer(ct.FRAMEBUFFER,e),I=e),ft.viewport(G),ft.scissor(H),ft.setScissorTest(k),i&&(i=pt.get(t.texture),ct.framebufferTexture2D(ct.FRAMEBUFFER,ct.COLOR_ATTACHMENT0,ct.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,i.__webglTexture,t.activeMipMapLevel))},this.readRenderTargetPixels=function(t,e,i,n,r,a){if(t&&t.isWebGLRenderTarget){var o=pt.get(t).__webglFramebuffer;if(o){var s=!1;o!==I&&(ct.bindFramebuffer(ct.FRAMEBUFFER,o),s=!0);try{var l=t.texture,h=l.format,c=l.type;1023!==h&&Rt.convert(h)!==ct.getParameter(ct.IMPLEMENTATION_COLOR_READ_FORMAT)?console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format."):1009===c||Rt.convert(c)===ct.getParameter(ct.IMPLEMENTATION_COLOR_READ_TYPE)||1015===c&&(ut.get("OES_texture_float")||ut.get("WEBGL_color_buffer_float"))||1016===c&&ut.get("EXT_color_buffer_half_float")?ct.checkFramebufferStatus(ct.FRAMEBUFFER)===ct.FRAMEBUFFER_COMPLETE?0<=e&&e<=t.width-n&&0<=i&&i<=t.height-r&&ct.readPixels(e,i,n,r,Rt.convert(h),Rt.convert(c),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."):console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.")}finally{s&&ct.bindFramebuffer(ct.FRAMEBUFFER,I)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")}}function pe(){ot.call(this),this.type="Scene",this.overrideMaterial=this.fog=this.background=null,this.autoUpdate=!0}function me(t,e,n,r){function a(t){h.push(t.x,t.y,t.z)}function o(e,i){e*=3,i.x=t[e+0],i.y=t[e+1],i.z=t[e+2]}function l(t,e,i,n){0>n&&1===t.x&&(c[e]=t.x-1),0===i.x&&0===i.z&&(c[e]=n/2/Math.PI+.5)}wt.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r},n=n||1;var h=[],c=[];!function(t){for(var i=new s,n=new s,r=new s,l=0;l<e.length;l+=3){o(e[l+0],i),o(e[l+1],n),o(e[l+2],r);var h,c,u=i,d=n,f=r,p=Math.pow(2,t),m=[];for(c=0;c<=p;c++){m[c]=[];var g=u.clone().lerp(f,c/p),v=d.clone().lerp(f,c/p),x=p-c;for(h=0;h<=x;h++)m[c][h]=0===h&&c===p?g:g.clone().lerp(v,h/x)}for(c=0;c<p;c++)for(h=0;h<2*(p-c)-1;h++)u=Math.floor(h/2),0==h%2?(a(m[c][u+1]),a(m[c+1][u]),a(m[c][u])):(a(m[c][u+1]),a(m[c+1][u+1]),a(m[c+1][u]))}}(r=r||0),function(t){for(var e=new s,i=0;i<h.length;i+=3)e.x=h[i+0],e.y=h[i+1],e.z=h[i+2],e.normalize().multiplyScalar(t),h[i+0]=e.x,h[i+1]=e.y,h[i+2]=e.z}(n),function(){for(var t=new s,e=0;e<h.length;e+=3)t.x=h[e+0],t.y=h[e+1],t.z=h[e+2],c.push(Math.atan2(t.z,-t.x)/2/Math.PI+.5,1-(Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))/Math.PI+.5));for(var t=new s,e=new s,n=new s,r=new s,a=new i,o=new i,u=new i,d=0,f=0;d<h.length;d+=9,f+=6){t.set(h[d+0],h[d+1],h[d+2]),e.set(h[d+3],h[d+4],h[d+5]),n.set(h[d+6],h[d+7],h[d+8]),a.set(c[f+0],c[f+1]),o.set(c[f+2],c[f+3]),u.set(c[f+4],c[f+5]),r.copy(t).add(e).add(n).divideScalar(3);var p=Math.atan2(r.z,-r.x);l(a,f+0,t,p),l(o,f+2,e,p),l(u,f+4,n,p)}for(t=0;t<c.length;t+=6)e=c[t+0],n=c[t+2],r=c[t+4],a=Math.min(e,n,r),.9<Math.max(e,n,r)&&.1>a&&(.2>e&&(c[t+0]+=1),.2>n&&(c[t+2]+=1),.2>r&&(c[t+4]+=1))}(),this.addAttribute("position",new yt(h,3)),this.addAttribute("normal",new yt(h.slice(),3)),this.addAttribute("uv",new yt(c,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}function ge(t,e){ut.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new ve(t,e)),this.mergeVertices()}function ve(t,e){var i=(1+Math.sqrt(5))/2;me.call(this,[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}function xe(t){j.call(this),this.type="MeshPhongMaterial",this.color=new H(16777215),this.specular=new H(1118481),this.shininess=30,this.lightMap=this.map=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new H(0),this.emissiveIntensity=1,this.bumpMap=this.emissiveMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.envMap=this.alphaMap=this.specularMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(t)}function _e(t,e){ot.call(this),this.type="Light",this.color=new H(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function ye(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new i(512,512),this.map=null,this.matrix=new l}function Me(){ye.call(this,new ht(50,1,.5,500))}function Ee(t,e,i,n,r,a){_e.call(this,t,e),this.type="SpotLight",this.position.copy(ot.DefaultUp),this.updateMatrix(),this.target=new ot,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==i?i:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==a?a:1,this.shadow=new Me}function be(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new ht,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new ht,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}Object.assign(e.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)},removeEventListener:function(t,e){void 0!==this._listeners&&void 0!==(t=this._listeners[t])&&-1!==(e=t.indexOf(e))&&t.splice(e,1)},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var i=0,n=(e=e.slice(0)).length;i<n;i++)e[i].call(this,t)}}}});var we={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var t,e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=Array(36),n=0;return function(){for(var r=0;36>r;r++)8===r||13===r||18===r||23===r?i[r]="-":14===r?i[r]="4":(2>=n&&(n=33554432+16777216*Math.random()|0),t=15&n,n>>=4,i[r]=e[19===r?3&t|8:t]);return i.join("")}}(),clamp:function(t,e,i){return Math.max(e,Math.min(i,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},lerp:function(t,e,i){return(1-i)*t+i*e},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*we.DEG2RAD},radToDeg:function(t){return t*we.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},nearestPowerOfTwo:function(t){return Math.pow(2,Math.round(Math.log(t)/Math.LN2))},nextPowerOfTwo:function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t}};Object.assign(i.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.y=this.x=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var t=new i,e=new i;return function(i,n){return t.set(i,i),e.set(n,n),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(this.y,this.x);return 0>t&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x;return t=this.y-t.y,e*e+t*t},distanceToManhattan:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var i=Math.cos(e);e=Math.sin(e);var n=this.x-t.x,r=this.y-t.y;return this.x=n*i-r*e+t.x,this.y=n*e+r*i+t.y,this}});var Te=0;n.DEFAULT_IMAGE=void 0,n.DEFAULT_MAPPING=300,Object.assign(r.prototype,{isVector4:!0,set:function(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this},setScalar:function(t){return this.w=this.z=this.y=this.x=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=this.w;return t=t.elements,this.x=t[0]*e+t[4]*i+t[8]*n+t[12]*r,this.y=t[1]*e+t[5]*i+t[9]*n+t[13]*r,this.z=t[2]*e+t[6]*i+t[10]*n+t[14]*r,this.w=t[3]*e+t[7]*i+t[11]*n+t[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return 1e-4>e?(this.x=1,this.z=this.y=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e=(t=t.elements)[0],i=t[4],n=t[8],r=t[1],a=t[5],o=t[9],s=t[2],l=t[6],h=t[10];return.01>Math.abs(i-r)&&.01>Math.abs(n-s)&&.01>Math.abs(o-l)?.1>Math.abs(i+r)&&.1>Math.abs(n+s)&&.1>Math.abs(o+l)&&.1>Math.abs(e+a+h-3)?(this.set(1,0,0,0),this):(t=Math.PI,e=(e+1)/2,a=(a+1)/2,h=(h+1)/2,i=(i+r)/4,n=(n+s)/4,o=(o+l)/4,e>a&&e>h?.01>e?(l=0,i=s=.707106781):(l=Math.sqrt(e),s=i/l,i=n/l):a>h?.01>a?(l=.707106781,s=0,i=.707106781):(s=Math.sqrt(a),l=i/s,i=o/s):.01>h?(s=l=.707106781,i=0):(i=Math.sqrt(h),l=n/i,s=o/i),this.set(l,s,i,t),this):(t=Math.sqrt((l-o)*(l-o)+(n-s)*(n-s)+(r-i)*(r-i)),.001>Math.abs(t)&&(t=1),this.x=(l-o)/t,this.y=(n-s)/t,this.z=(r-i)/t,this.w=Math.acos((e+a+h-1)/2),this)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var t,e;return function(i,n){return void 0===t&&(t=new r,e=new r),t.set(i,i,i,i),e.set(n,n,n,n),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}}),Object.assign(o.prototype,{set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var i=t._x,n=t._y,r=t._z;t=t.order;var a=Math.cos,o=Math.sin,s=a(i/2),l=a(n/2),a=a(r/2),i=o(i/2),n=o(n/2),r=o(r/2);return"XYZ"===t?(this._x=i*l*a+s*n*r,this._y=s*n*a-i*l*r,this._z=s*l*r+i*n*a,this._w=s*l*a-i*n*r):"YXZ"===t?(this._x=i*l*a+s*n*r,this._y=s*n*a-i*l*r,this._z=s*l*r-i*n*a,this._w=s*l*a+i*n*r):"ZXY"===t?(this._x=i*l*a-s*n*r,this._y=s*n*a+i*l*r,this._z=s*l*r+i*n*a,this._w=s*l*a-i*n*r):"ZYX"===t?(this._x=i*l*a-s*n*r,this._y=s*n*a+i*l*r,this._z=s*l*r-i*n*a,this._w=s*l*a+i*n*r):"YZX"===t?(this._x=i*l*a+s*n*r,this._y=s*n*a+i*l*r,this._z=s*l*r-i*n*a,this._w=s*l*a-i*n*r):"XZY"===t&&(this._x=i*l*a-s*n*r,this._y=s*n*a-i*l*r,this._z=s*l*r+i*n*a,this._w=s*l*a+i*n*r),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){e/=2;var i=Math.sin(e);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(e),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e=t.elements,i=e[0];t=e[4];var n=e[8],r=e[1],a=e[5],o=e[9],s=e[2],l=e[6],h=i+a+(e=e[10]);return 0<h?(i=.5/Math.sqrt(h+1),this._w=.25/i,this._x=(l-o)*i,this._y=(n-s)*i,this._z=(r-t)*i):i>a&&i>e?(i=2*Math.sqrt(1+i-a-e),this._w=(l-o)/i,this._x=.25*i,this._y=(t+r)/i,this._z=(n+s)/i):a>e?(i=2*Math.sqrt(1+a-i-e),this._w=(n-s)/i,this._x=(t+r)/i,this._y=.25*i,this._z=(o+l)/i):(i=2*Math.sqrt(1+e-i-a),this._w=(r-t)/i,this._x=(n+s)/i,this._y=(o+l)/i,this._z=.25*i),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e=new s;return function(i,n){return void 0===e&&(e=new s),1e-6>(t=i.dot(n)+1)?(t=0,Math.abs(i.x)>Math.abs(i.z)?e.set(-i.y,i.x,0):e.set(0,-i.z,i.y)):e.crossVectors(i,n),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._z=this._y=this._x=0,this._w=1):(t=1/t,this._x*=t,this._y*=t,this._z*=t,this._w*=t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var i=t._x,n=t._y,r=t._z;t=t._w;var a=e._x,o=e._y,s=e._z;return e=e._w,this._x=i*e+t*a+n*s-r*o,this._y=n*e+t*o+r*a-i*s,this._z=r*e+t*s+i*o-n*a,this._w=t*e-i*a-n*o-r*s,this.onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var i=this._x,n=this._y,r=this._z,a=this._w;if(0>(s=a*t._w+i*t._x+n*t._y+r*t._z)?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),1<=s)return this._w=a,this._x=i,this._y=n,this._z=r,this;if(t=Math.sqrt(1-s*s),.001>Math.abs(t))return this._w=.5*(a+this._w),this._x=.5*(i+this._x),this._y=.5*(n+this._y),this._z=.5*(r+this._z),this;var o=Math.atan2(t,s),s=Math.sin((1-e)*o)/t;return e=Math.sin(e*o)/t,this._w=a*s+this._w*e,this._x=i*s+this._x*e,this._y=n*s+this._y*e,this._z=r*s+this._z*e,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(s.prototype,{isVector3:!0,set:function(t,e,i){return this.x=t,this.y=e,this.z=i,this},setScalar:function(t){return this.z=this.y=this.x=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=1/((t=t.elements)[3]*e+t[7]*i+t[11]*n+t[15]);return this.x=(t[0]*e+t[4]*i+t[8]*n+t[12])*r,this.y=(t[1]*e+t[5]*i+t[9]*n+t[13])*r,this.z=(t[2]*e+t[6]*i+t[10]*n+t[14])*r,this},transformDirection:function(t){var e=this.x,i=this.y,n=this.z;return t=t.elements,this.x=t[0]*e+t[4]*i+t[8]*n,this.y=t[1]*e+t[5]*i+t[9]*n,this.z=t[2]*e+t[6]*i+t[10]*n,this.normalize()},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},cross:function(t,e){if(void 0!==e)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e);e=this.x;var i=this.y,n=this.z;return this.x=i*t.z-n*t.y,this.y=n*t.x-e*t.z,this.z=e*t.y-i*t.x,this},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y;return t=this.z-t.z,e*e+i*i+t*t},setFromMatrixPosition:function(t){return t=t.elements,this.x=t[12],this.y=t[13],this.z=t[14],this},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}}),Object.assign(l.prototype,{isMatrix4:!0,set:function(t,e,i,n,r,a,o,s,l,h,c,u,d,f,p,m){var g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=n,g[1]=r,g[5]=a,g[9]=o,g[13]=s,g[2]=l,g[6]=h,g[10]=c,g[14]=u,g[3]=d,g[7]=f,g[11]=p,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new l).fromArray(this.elements)},copy:function(t){var e=this.elements;return t=t.elements,e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],this},copyPosition:function(t){var e=this.elements;return t=t.elements,e[12]=t[12],e[13]=t[13],e[14]=t[14],this},extractBasis:function(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this},extractRotation:function(){var t=new s;return function(e){var i=this.elements,n=e.elements,r=1/t.setFromMatrixColumn(e,0).length(),a=1/t.setFromMatrixColumn(e,1).length();return e=1/t.setFromMatrixColumn(e,2).length(),i[0]=n[0]*r,i[1]=n[1]*r,i[2]=n[2]*r,i[4]=n[4]*a,i[5]=n[5]*a,i[6]=n[6]*a,i[8]=n[8]*e,i[9]=n[9]*e,i[10]=n[10]*e,this}}(),makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,i=t.x,n=t.y,r=t.z,a=Math.cos(i),i=Math.sin(i),o=Math.cos(n),n=Math.sin(n),s=Math.cos(r),r=Math.sin(r);if("XYZ"===t.order){var l=a*s,h=a*r,c=i*s;t=i*r,e[0]=o*s,e[4]=-o*r,e[8]=n,e[1]=h+c*n,e[5]=l-t*n,e[9]=-i*o,e[2]=t-l*n,e[6]=c+h*n,e[10]=a*o}else"YXZ"===t.order?(l=o*s,h=o*r,c=n*s,t=n*r,e[0]=l+t*i,e[4]=c*i-h,e[8]=a*n,e[1]=a*r,e[5]=a*s,e[9]=-i,e[2]=h*i-c,e[6]=t+l*i,e[10]=a*o):"ZXY"===t.order?(l=o*s,h=o*r,c=n*s,t=n*r,e[0]=l-t*i,e[4]=-a*r,e[8]=c+h*i,e[1]=h+c*i,e[5]=a*s,e[9]=t-l*i,e[2]=-a*n,e[6]=i,e[10]=a*o):"ZYX"===t.order?(l=a*s,h=a*r,c=i*s,t=i*r,e[0]=o*s,e[4]=c*n-h,e[8]=l*n+t,e[1]=o*r,e[5]=t*n+l,e[9]=h*n-c,e[2]=-n,e[6]=i*o,e[10]=a*o):"YZX"===t.order?(l=a*o,h=a*n,c=i*o,t=i*n,e[0]=o*s,e[4]=t-l*r,e[8]=c*r+h,e[1]=r,e[5]=a*s,e[9]=-i*s,e[2]=-n*s,e[6]=h*r+c,e[10]=l-t*r):"XZY"===t.order&&(l=a*o,h=a*n,c=i*o,t=i*n,e[0]=o*s,e[4]=-r,e[8]=n*s,e[1]=l*r+t,e[5]=a*s,e[9]=h*r-c,e[2]=c*r-h,e[6]=i*s,e[10]=t*r+l);return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){var e=this.elements,i=t._x,n=t._y,r=t._z,a=t._w,o=r+r;t=i*(h=i+i);var s=i*(c=n+n),i=i*o,l=n*c,n=n*o,r=r*o,h=a*h,c=a*c,a=a*o;return e[0]=1-(l+r),e[4]=s-a,e[8]=i+c,e[1]=s+a,e[5]=1-(t+r),e[9]=n-h,e[2]=i-c,e[6]=n+h,e[10]=1-(t+l),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t=new s,e=new s,i=new s;return function(n,r,a){var o=this.elements;return i.subVectors(n,r),0===i.lengthSq()&&(i.z=1),i.normalize(),t.crossVectors(a,i),0===t.lengthSq()&&(1===Math.abs(a.z)?i.x+=1e-4:i.z+=1e-4,i.normalize(),t.crossVectors(a,i)),t.normalize(),e.crossVectors(i,t),o[0]=t.x,o[4]=e.x,o[8]=i.x,o[1]=t.y,o[5]=e.y,o[9]=i.y,o[2]=t.z,o[6]=e.z,o[10]=i.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements;e=this.elements,t=i[0];var r=i[4],a=i[8],o=i[12],s=i[1],l=i[5],h=i[9],c=i[13],u=i[2],d=i[6],f=i[10],p=i[14],m=i[3],g=i[7],v=i[11],i=i[15],x=n[0],_=n[4],y=n[8],M=n[12],E=n[1],b=n[5],w=n[9],T=n[13],S=n[2],A=n[6],L=n[10],R=n[14],P=n[3],C=n[7],U=n[11],n=n[15];return e[0]=t*x+r*E+a*S+o*P,e[4]=t*_+r*b+a*A+o*C,e[8]=t*y+r*w+a*L+o*U,e[12]=t*M+r*T+a*R+o*n,e[1]=s*x+l*E+h*S+c*P,e[5]=s*_+l*b+h*A+c*C,e[9]=s*y+l*w+h*L+c*U,e[13]=s*M+l*T+h*R+c*n,e[2]=u*x+d*E+f*S+p*P,e[6]=u*_+d*b+f*A+p*C,e[10]=u*y+d*w+f*L+p*U,e[14]=u*M+d*T+f*R+p*n,e[3]=m*x+g*E+v*S+i*P,e[7]=m*_+g*b+v*A+i*C,e[11]=m*y+g*w+v*L+i*U,e[15]=m*M+g*T+v*R+i*n,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(){var t=new s;return function(e){for(var i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix4(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),determinant:function(){var t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],a=t[1],o=t[5],s=t[9],l=t[13],h=t[2],c=t[6],u=t[10],d=t[14];return t[3]*(+r*s*c-n*l*c-r*o*u+i*l*u+n*o*d-i*s*d)+t[7]*(+e*s*d-e*l*u+r*a*u-n*a*d+n*l*h-r*s*h)+t[11]*(+e*l*c-e*o*d-r*a*c+i*a*d+r*o*h-i*l*h)+t[15]*(-n*o*h-e*s*c+e*o*u+n*a*c-i*a*u+i*s*h)},transpose:function(){var t=this.elements,e=t[1];return t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var i=this.elements,n=t.elements;t=n[0];var r=n[1],a=n[2],o=n[3],s=n[4],l=n[5],h=n[6],c=n[7],u=n[8],d=n[9],f=n[10],p=n[11],m=n[12],g=n[13],v=n[14],x=d*v*c-g*f*c+g*h*p-l*v*p-d*h*(n=n[15])+l*f*n,_=m*f*c-u*v*c-m*h*p+s*v*p+u*h*n-s*f*n,y=u*g*c-m*d*c+m*l*p-s*g*p-u*l*n+s*d*n,M=m*d*h-u*g*h-m*l*f+s*g*f+u*l*v-s*d*v,E=t*x+r*_+a*y+o*M;if(0===E){if(!0===e)throw Error("THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0");return console.warn("THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0"),this.identity()}return e=1/E,i[0]=x*e,i[1]=(g*f*o-d*v*o-g*a*p+r*v*p+d*a*n-r*f*n)*e,i[2]=(l*v*o-g*h*o+g*a*c-r*v*c-l*a*n+r*h*n)*e,i[3]=(d*h*o-l*f*o-d*a*c+r*f*c+l*a*p-r*h*p)*e,i[4]=_*e,i[5]=(u*v*o-m*f*o+m*a*p-t*v*p-u*a*n+t*f*n)*e,i[6]=(m*h*o-s*v*o-m*a*c+t*v*c+s*a*n-t*h*n)*e,i[7]=(s*f*o-u*h*o+u*a*c-t*f*c-s*a*p+t*h*p)*e,i[8]=y*e,i[9]=(m*d*o-u*g*o-m*r*p+t*g*p+u*r*n-t*d*n)*e,i[10]=(s*g*o-m*l*o+m*r*c-t*g*c-s*r*n+t*l*n)*e,i[11]=(u*l*o-s*d*o-u*r*c+t*d*c+s*r*p-t*l*p)*e,i[12]=M*e,i[13]=(u*g*a-m*d*a+m*r*f-t*g*f-u*r*v+t*d*v)*e,i[14]=(m*l*a-s*g*a-m*r*h+t*g*h+s*r*v-t*l*v)*e,i[15]=(s*d*a-u*l*a+u*r*h-t*d*h-s*r*f+t*l*f)*e,this},scale:function(t){var e=this.elements,i=t.x,n=t.y;return t=t.z,e[0]*=i,e[4]*=n,e[8]*=t,e[1]*=i,e[5]*=n,e[9]*=t,e[2]*=i,e[6]*=n,e[10]*=t,e[3]*=i,e[7]*=n,e[11]*=t,this},getMaxScaleOnAxis:function(){var t=this.elements;return Math.sqrt(Math.max(t[0]*t[0]+t[1]*t[1]+t[2]*t[2],t[4]*t[4]+t[5]*t[5]+t[6]*t[6],t[8]*t[8]+t[9]*t[9]+t[10]*t[10]))},makeTranslation:function(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t);return t=Math.sin(t),this.set(1,0,0,0,0,e,-t,0,0,t,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t);return t=Math.sin(t),this.set(e,0,t,0,0,1,0,0,-t,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t);return t=Math.sin(t),this.set(e,-t,0,0,t,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var i=Math.cos(e);e=Math.sin(e);var n=1-i,r=t.x,a=t.y;t=t.z;var o=n*r,s=n*a;return this.set(o*r+i,o*a-e*t,o*t+e*a,0,o*a+e*t,s*a+i,s*t-e*r,0,o*t-e*a,s*t+e*r,n*t*t+i,0,0,0,0,1),this},makeScale:function(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this},makeShear:function(t,e,i){return this.set(1,e,i,0,t,1,i,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,i){return this.makeRotationFromQuaternion(e),this.scale(i),this.setPosition(t),this},decompose:function(){var t=new s,e=new l;return function(i,n,r){var a=this.elements,o=t.set(a[0],a[1],a[2]).length(),s=t.set(a[4],a[5],a[6]).length(),l=t.set(a[8],a[9],a[10]).length();0>this.determinant()&&(o=-o),i.x=a[12],i.y=a[13],i.z=a[14],e.copy(this),i=1/o;var a=1/s,h=1/l;return e.elements[0]*=i,e.elements[1]*=i,e.elements[2]*=i,e.elements[4]*=a,e.elements[5]*=a,e.elements[6]*=a,e.elements[8]*=h,e.elements[9]*=h,e.elements[10]*=h,n.setFromRotationMatrix(e),r.x=o,r.y=s,r.z=l,this}}(),makePerspective:function(t,e,i,n,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var o=this.elements;return o[0]=2*r/(e-t),o[4]=0,o[8]=(e+t)/(e-t),o[12]=0,o[1]=0,o[5]=2*r/(i-n),o[9]=(i+n)/(i-n),o[13]=0,o[2]=0,o[6]=0,o[10]=-(a+r)/(a-r),o[14]=-2*a*r/(a-r),o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(t,e,i,n,r,a){var o=this.elements,s=1/(e-t),l=1/(i-n),h=1/(a-r);return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-(e+t)*s,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-(i+n)*l,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-(a+r)*h,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){var e=this.elements;t=t.elements;for(var i=0;16>i;i++)if(e[i]!==t[i])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;16>i;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}});var Se=new n,Ae=new c,Le=[],Re=[],Pe=new Float32Array(16),Ce=new Float32Array(9);G.prototype.setValue=function(t,e){for(var i=this.seq,n=0,r=i.length;n!==r;++n){var a=i[n];a.setValue(t,e[a.id])}};var Ue=/([\w\d_]+)(\])?(\[|\.)?/g;V.prototype.setValue=function(t,e,i){void 0!==(e=this.map[e])&&e.setValue(t,i,this.renderer)},V.prototype.setOptional=function(t,e,i){void 0!==(e=e[i])&&this.setValue(t,i,e)},V.upload=function(t,e,i,n){for(var r=0,a=e.length;r!==a;++r){var o=e[r],s=i[o.id];!1!==s.needsUpdate&&o.setValue(t,s.value,n)}},V.seqWithValue=function(t,e){for(var i=[],n=0,r=t.length;n!==r;++n){var a=t[n];a.id in e&&i.push(a)}return i},Object.assign(H.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.b=this.g=this.r=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,i){return this.r=t,this.g=e,this.b=i,this},setHSL:function(){function t(t,e,i){return 0>i&&(i+=1),1<i&&--i,i<1/6?t+6*(e-t)*i:.5>i?e:i<2/3?t+6*(e-t)*(2/3-i):t}return function(e,i,n){return e=we.euclideanModulo(e,1),i=we.clamp(i,0,1),n=we.clamp(n,0,1),0===i?this.r=this.g=this.b=n:(i=.5>=n?n*(1+i):n+i-n*i,n=2*n-i,this.r=t(n,i,e+1/3),this.g=t(n,i,e),this.b=t(n,i,e-1/3)),this}}(),setStyle:function(t){function e(e){void 0!==e&&1>parseFloat(e)&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){n=i[2];switch(i[1]){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(n))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,e(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(n))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,e(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(n)){var n=parseFloat(i[1])/360,r=parseInt(i[2],10)/100,a=parseInt(i[3],10)/100;return e(i[5]),this.setHSL(n,r,a)}}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(t)){if(i=i[1],3===(n=i.length))return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(6===n)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return t&&0<t.length&&(void 0!==(i=rg[t])?this.setHex(i):console.warn("THREE.Color: Unknown color "+t)),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){return void 0===e&&(e=2),e=0<e?1/e:1,this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},convertGammaToLinear:function(){var t=this.r,e=this.g,i=this.b;return this.r=t*t,this.g=e*e,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){t=t||{h:0,s:0,l:0};var e,i=this.r,n=this.g,r=this.b,a=Math.max(i,n,r),o=((l=Math.min(i,n,r))+a)/2;if(l===a)l=e=0;else{var s=a-l,l=.5>=o?s/(a+l):s/(2-a-l);switch(a){case i:e=(n-r)/s+(n<r?6:0);break;case n:e=(r-i)/s+2;break;case r:e=(i-n)/s+4}e/=6}return t.h=e,t.s=l,t.l=o,t},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,i){var n=this.getHSL();return n.h+=t,n.s+=e,n.l+=i,this.setHSL(n.h,n.s,n.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}});var Ne={common:{diffuse:{value:new H(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new r(0,0,1,1)},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new i(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new H(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new H(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new r(0,0,1,1)}}},De={merge:function(t){for(var e={},i=0;i<t.length;i++){var n,r=this.clone(t[i]);for(n in r)e[n]=r[n]}return e},clone:function(t){var e,i={};for(e in t){i[e]={};for(var n in t[e]){var r=t[e][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?i[e][n]=r.clone():Array.isArray(r)?i[e][n]=r.slice():i[e][n]=r}}return i}},Ie={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n",bsdfs:"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transpose( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",defaultnormal_vertex:"vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",encodings_fragment:"  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",envmap_fragment:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",envmap_pars_fragment:"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",envmap_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",lights_pars:"uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",lights_template:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",logdepthbuf_fragment:"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",map_particle_fragment:"#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",normal_fragment:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",project_vertex:"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",dithering_pars_fragment:"#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",tonemapping_pars_fragment:"#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",uv_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",uv_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n"},Fe={basic:{uniforms:De.merge([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.fog]),vertexShader:Ie.meshbasic_vert,fragmentShader:Ie.meshbasic_frag},lambert:{uniforms:De.merge([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.fog,Ne.lights,{emissive:{value:new H(0)}}]),vertexShader:Ie.meshlambert_vert,fragmentShader:Ie.meshlambert_frag},phong:{uniforms:De.merge([Ne.common,Ne.specularmap,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.gradientmap,Ne.fog,Ne.lights,{emissive:{value:new H(0)},specular:{value:new H(1118481)},shininess:{value:30}}]),vertexShader:Ie.meshphong_vert,fragmentShader:Ie.meshphong_frag},standard:{uniforms:De.merge([Ne.common,Ne.envmap,Ne.aomap,Ne.lightmap,Ne.emissivemap,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,Ne.roughnessmap,Ne.metalnessmap,Ne.fog,Ne.lights,{emissive:{value:new H(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:Ie.meshphysical_vert,fragmentShader:Ie.meshphysical_frag},points:{uniforms:De.merge([Ne.points,Ne.fog]),vertexShader:Ie.points_vert,fragmentShader:Ie.points_frag},dashed:{uniforms:De.merge([Ne.common,Ne.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ie.linedashed_vert,fragmentShader:Ie.linedashed_frag},depth:{uniforms:De.merge([Ne.common,Ne.displacementmap]),vertexShader:Ie.depth_vert,fragmentShader:Ie.depth_frag},normal:{uniforms:De.merge([Ne.common,Ne.bumpmap,Ne.normalmap,Ne.displacementmap,{opacity:{value:1}}]),vertexShader:Ie.normal_vert,fragmentShader:Ie.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ie.cube_vert,fragmentShader:Ie.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ie.equirect_vert,fragmentShader:Ie.equirect_frag},distanceRGBA:{uniforms:De.merge([Ne.common,Ne.displacementmap,{referencePosition:{value:new s},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ie.distanceRGBA_vert,fragmentShader:Ie.distanceRGBA_frag},shadow:{uniforms:De.merge([Ne.lights,{color:{value:new H(0)},opacity:{value:1}}]),vertexShader:Ie.shadow_vert,fragmentShader:Ie.shadow_frag}};Fe.physical={uniforms:De.merge([Fe.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:Ie.meshphysical_vert,fragmentShader:Ie.meshphysical_frag};var ze=0;Object.assign(j.prototype,e.prototype,{isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var i=t[e];if(void 0===i)console.warn("THREE.Material: '"+e+"' parameter is undefined.");else if("shading"===e)console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;else{var n=this[e];void 0===n?console.warn("THREE."+this.type+": '"+e+"' is not a property of this material."):n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]="overdraw"===e?Number(i):i}}},toJSON:function(t){function e(t){var e,i=[];for(e in t){var n=t[e];delete n.metadata,i.push(n)}return i}var i=void 0===t;i&&(t={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};return n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearCoat&&(n.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),0!==this.side&&(n.side=this.side),0!==this.vertexColors&&(n.vertexColors=this.vertexColors),1>this.opacity&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,!0===this.dithering&&(n.dithering=!0),0<this.alphaTest&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),1<this.wireframeLinewidth&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),i&&(i=e(t.textures),t=e(t.images),0<i.length&&(n.textures=i),0<t.length&&(n.images=t)),n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.overdraw=t.overdraw,this.visible=t.visible,this.userData=JSON.parse(JSON.stringify(t.userData)),this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;i=null;if(null!==(t=t.clippingPlanes))for(var e=t.length,i=Array(e),n=0;n!==e;++n)i[n]=t[n].clone();return this.clippingPlanes=i,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Z.prototype=Object.create(j.prototype),J.prototype=Object.create(j.prototype),Object.assign(Q.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,l=t.length;s<l;s+=3){var h=t[s],c=t[s+1],u=t[s+2];h<e&&(e=h),c<i&&(i=c),u<n&&(n=u),h>r&&(r=h),c>a&&(a=c),u>o&&(o=u)}return this.min.set(e,i,n),this.max.set(r,a,o),this},setFromBufferAttribute:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,l=t.count;s<l;s++){var h=t.getX(s),c=t.getY(s),u=t.getZ(s);h<e&&(e=h),c<i&&(i=c),u<n&&(n=u),h>r&&(r=h),c>a&&(a=c),u>o&&(o=u)}return this.min.set(e,i,n),this.max.set(r,a,o),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new s;return function(e,i){return i=t.copy(i).multiplyScalar(.5),this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return t=t||new s,this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return t=t||new s,this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){var t=new s;return function(e){var i=this;return e.updateMatrixWorld(!0),e.traverse(function(e){var n,r=e.geometry;if(void 0!==r)if(r.isGeometry){var a=r.vertices;for(r=0,n=a.length;r<n;r++)t.copy(a[r]),t.applyMatrix4(e.matrixWorld),i.expandByPoint(t)}else if(r.isBufferGeometry&&void 0!==(a=r.attributes.position))for(r=0,n=a.count;r<n;r++)t.fromBufferAttribute(a,r).applyMatrix4(e.matrixWorld),i.expandByPoint(t)}),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new s).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var t=new s;return function(e){return this.clampPoint(e.center,t),t.distanceToSquared(e.center)<=e.radius*e.radius}}(),intersectsPlane:function(t){if(0<t.normal.x)var e=t.normal.x*this.min.x,i=t.normal.x*this.max.x;else e=t.normal.x*this.max.x,i=t.normal.x*this.min.x;return 0<t.normal.y?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),0<t.normal.z?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=t.constant&&i>=t.constant},clampPoint:function(t,e){return(e||new s).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new s;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new s;return function(e){return e=e||new K,this.getCenter(e.center),e.radius=.5*this.getSize(t).length(),e}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new s,new s,new s,new s,new s,new s,new s,new s];return function(e){return this.isEmpty()?this:(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(t),this)}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),Object.assign(K.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new Q;return function(e,i){var n=this.center;void 0!==i?n.copy(i):t.setFromPoints(e).getCenter(n);for(var r=i=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var i=this.center.distanceToSquared(t);return(e=e||new s).copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return(t=t||new Q).set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius*=t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}}),Object.assign($.prototype,{isMatrix3:!0,set:function(t,e,i,n,r,a,o,s,l){var h=this.elements;return h[0]=t,h[1]=n,h[2]=o,h[3]=e,h[4]=r,h[5]=s,h[6]=i,h[7]=a,h[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements;return t=t.elements,e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],this},setFromMatrix4:function(t){return t=t.elements,this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToBufferAttribute:function(){var t=new s;return function(e){for(var i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix3(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements;e=this.elements,t=i[0];var r=i[3],a=i[6],o=i[1],s=i[4],l=i[7],h=i[2],c=i[5],i=i[8],u=n[0],d=n[3],f=n[6],p=n[1],m=n[4],g=n[7],v=n[2],x=n[5],n=n[8];return e[0]=t*u+r*p+a*v,e[3]=t*d+r*m+a*x,e[6]=t*f+r*g+a*n,e[1]=o*u+s*p+l*v,e[4]=o*d+s*m+l*x,e[7]=o*f+s*g+l*n,e[2]=h*u+c*p+i*v,e[5]=h*d+c*m+i*x,e[8]=h*f+c*g+i*n,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],a=t[4],o=t[5],s=t[6],l=t[7];return e*a*(t=t[8])-e*o*l-i*r*t+i*o*s+n*r*l-n*a*s},getInverse:function(t,e){t&&t.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var i=t.elements;t=this.elements;var n=i[0],r=i[1],a=i[2],o=i[3],s=i[4],l=i[5],h=i[6],c=i[7],u=(i=i[8])*s-l*c,d=l*h-i*o,f=c*o-s*h,p=n*u+r*d+a*f;if(0===p){if(!0===e)throw Error("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0");return console.warn("THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0"),this.identity()}return e=1/p,t[0]=u*e,t[1]=(a*c-i*r)*e,t[2]=(l*r-a*s)*e,t[3]=d*e,t[4]=(i*n-a*h)*e,t[5]=(a*o-l*n)*e,t[6]=f*e,t[7]=(r*h-c*n)*e,t[8]=(s*n-r*o)*e,this},transpose:function(){var t=this.elements,e=t[1];return t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},equals:function(t){var e=this.elements;t=t.elements;for(var i=0;9>i;i++)if(e[i]!==t[i])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;9>i;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}}),Object.assign(tt.prototype,{set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new s,e=new s;return function(i,n,r){return n=t.subVectors(r,n).cross(e.subVectors(i,n)).normalize(),this.setFromNormalAndCoplanarPoint(n,i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return(e||new s).copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(){var t=new s;return function(e,i){i=i||new s;var n=e.delta(t),r=this.normal.dot(n);if(0===r){if(0===this.distanceToPoint(e.start))return i.copy(e.start)}else if(!(0>(r=-(e.start.dot(this.normal)+this.constant)/r)||1<r))return i.copy(n).multiplyScalar(r).add(e.start)}}(),intersectsLine:function(t){var e=this.distanceToPoint(t.start);return t=this.distanceToPoint(t.end),0>e&&0<t||0>t&&0<e},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return(t||new s).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new s,e=new $;return function(i,n){return n=n||e.getNormalMatrix(i),i=this.coplanarPoint(t).applyMatrix4(i),n=this.normal.applyMatrix3(n).normalize(),this.constant=-i.dot(n),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}),Object.assign(et.prototype,{set:function(t,e,i,n,r,a){var o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(i),o[3].copy(n),o[4].copy(r),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,i=0;6>i;i++)e[i].copy(t.planes[i]);return this},setFromMatrix:function(t){var e=this.planes;t=(g=t.elements)[0];var i=g[1],n=g[2],r=g[3],a=g[4],o=g[5],s=g[6],l=g[7],h=g[8],c=g[9],u=g[10],d=g[11],f=g[12],p=g[13],m=g[14],g=g[15];return e[0].setComponents(r-t,l-a,d-h,g-f).normalize(),e[1].setComponents(r+t,l+a,d+h,g+f).normalize(),e[2].setComponents(r+i,l+o,d+c,g+p).normalize(),e[3].setComponents(r-i,l-o,d-c,g-p).normalize(),e[4].setComponents(r-n,l-s,d-u,g-m).normalize(),e[5].setComponents(r+n,l+s,d+u,g+m).normalize(),this},intersectsObject:function(){var t=new K;return function(e){var i=e.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),t.copy(i.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSprite:function(){var t=new K;return function(e){return t.center.set(0,0,0),t.radius=.7071067811865476,t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){var e=this.planes,i=t.center;t=-t.radius;for(var n=0;6>n;n++)if(e[n].distanceToPoint(i)<t)return!1;return!0},intersectsBox:function(){var t=new s,e=new s;return function(i){for(var n=this.planes,r=0;6>r;r++){o=n[r];t.x=0<o.normal.x?i.min.x:i.max.x,e.x=0<o.normal.x?i.max.x:i.min.x,t.y=0<o.normal.y?i.min.y:i.max.y,e.y=0<o.normal.y?i.max.y:i.min.y,t.z=0<o.normal.z?i.min.z:i.max.z,e.z=0<o.normal.z?i.max.z:i.min.z;var a=o.distanceToPoint(t),o=o.distanceToPoint(e);if(0>a&&0>o)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,i=0;6>i;i++)if(0>e[i].distanceToPoint(t))return!1;return!0}}),rt.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" "),rt.DefaultOrder="XYZ",Object.defineProperties(rt.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this.onChangeCallback()}}}),Object.assign(rt.prototype,{isEuler:!0,set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._order=n||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,i){var n=we.clamp;t=(u=t.elements)[0];var r=u[4],a=u[8],o=u[1],s=u[5],l=u[9],h=u[2],c=u[6],u=u[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(n(a,-1,1)),.99999>Math.abs(a)?(this._x=Math.atan2(-l,u),this._z=Math.atan2(-r,t)):(this._x=Math.atan2(c,s),this._z=0)):"YXZ"===e?(this._x=Math.asin(-n(l,-1,1)),.99999>Math.abs(l)?(this._y=Math.atan2(a,u),this._z=Math.atan2(o,s)):(this._y=Math.atan2(-h,t),this._z=0)):"ZXY"===e?(this._x=Math.asin(n(c,-1,1)),.99999>Math.abs(c)?(this._y=Math.atan2(-h,u),this._z=Math.atan2(-r,s)):(this._y=0,this._z=Math.atan2(o,t))):"ZYX"===e?(this._y=Math.asin(-n(h,-1,1)),.99999>Math.abs(h)?(this._x=Math.atan2(c,u),this._z=Math.atan2(o,t)):(this._x=0,this._z=Math.atan2(-r,s))):"YZX"===e?(this._z=Math.asin(n(o,-1,1)),.99999>Math.abs(o)?(this._x=Math.atan2(-l,s),this._y=Math.atan2(-h,t)):(this._x=0,this._y=Math.atan2(a,u))):"XZY"===e?(this._z=Math.asin(-n(r,-1,1)),.99999>Math.abs(r)?(this._x=Math.atan2(c,s),this._y=Math.atan2(a,t)):(this._x=Math.atan2(-l,u),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==i&&this.onChangeCallback(),this},setFromQuaternion:function(){var t=new l;return function(e,i,n){return t.makeRotationFromQuaternion(e),this.setFromRotationMatrix(t,i,n)}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){var t=new o;return function(e){return t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new s(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(at.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask=this.mask|1<<t|0},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},test:function(t){return 0!=(this.mask&t.mask)}});var Oe=0;ot.DefaultUp=new s(0,1,0),ot.DefaultMatrixAutoUpdate=!0,Object.assign(ot.prototype,e.prototype,{isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new o;return function(e,i){return t.setFromAxisAngle(e,i),this.quaternion.multiply(t),this}}(),rotateX:function(){var t=new s(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new s(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new s(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new s;return function(e,i){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(i)),this}}(),translateX:function(){var t=new s(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new s(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new s(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new l;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new l;return function(e){this.isCamera?t.lookAt(this.position,e,this.up):t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(1<arguments.length){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(1<arguments.length){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}return-1!==(e=this.children.indexOf(t))&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(e,1)),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var i=0,n=this.children.length;i<n;i++){var r=this.children[i].getObjectByProperty(t,e);if(void 0!==r)return r}},getWorldPosition:function(t){return t=t||new s,this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new s,e=new s;return function(i){return i=i||new o,this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,i,e),i}}(),getWorldRotation:function(){var t=new o;return function(e){return e=e||new rt,this.getWorldQuaternion(t),e.setFromQuaternion(t,this.rotation.order,!1)}}(),getWorldScale:function(){var t=new s,e=new o;return function(i){return i=i||new s,this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,i),i}}(),getWorldDirection:function(){var t=new o;return function(e){return e=e||new s,this.getWorldQuaternion(t),e.set(0,0,1).applyQuaternion(t)}}(),raycast:function(){},traverse:function(t){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)},toJSON:function(t){function e(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}function i(t){var e,i=[];for(e in t){var n=t[e];delete n.metadata,i.push(n)}return i}var n=void 0===t||""===t,r={};n&&(t={geometries:{},materials:{},textures:{},images:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var a={};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.matrix=this.matrix.toArray(),void 0!==this.geometry&&(a.geometry=e(t.geometries,this.geometry)),void 0!==this.material)if(Array.isArray(this.material)){for(var o=[],s=0,l=this.material.length;s<l;s++)o.push(e(t.materials,this.material[s]));a.material=o}else a.material=e(t.materials,this.material);if(0<this.children.length)for(a.children=[],s=0;s<this.children.length;s++)a.children.push(this.children[s].toJSON(t).object);return n&&(n=i(t.geometries),o=i(t.materials),s=i(t.textures),l=i(t.images),0<n.length&&(r.geometries=n),0<o.length&&(r.materials=o),0<s.length&&(r.textures=s),0<l.length&&(r.images=l)),r.object=a,r},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(e=0;e<t.children.length;e++)this.add(t.children[e].clone());return this}}),st.prototype=Object.assign(Object.create(ot.prototype),{constructor:st,isCamera:!0,copy:function(t,e){return ot.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this},getWorldDirection:function(){var t=new o;return function(e){return e=e||new s,this.getWorldQuaternion(t),e.set(0,0,-1).applyQuaternion(t)}}(),updateMatrixWorld:function(t){ot.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),ht.prototype=Object.assign(Object.create(st.prototype),{constructor:ht,isPerspectiveCamera:!0,copy:function(t,e){return st.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){t=.5*this.getFilmHeight()/t,this.fov=2*we.RAD2DEG*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(.5*we.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*we.RAD2DEG*Math.atan(Math.tan(.5*we.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,i,n,r,a){this.aspect=t/e,this.view={fullWidth:t,fullHeight:e,offsetX:i,offsetY:n,width:r,height:a},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=2*(o=t*Math.tan(.5*we.DEG2RAD*this.fov)/this.zoom),i=-.5*(s=this.aspect*e),n=this.view;if(null!==n)var r=n.fullWidth,a=n.fullHeight,i=i+n.offsetX*s/r,o=o-n.offsetY*e/a,s=n.width/r*s,e=n.height/a*e;0!==(n=this.filmOffset)&&(i+=t*n/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+s,o,o-e,t,this.far)},toJSON:function(t){return t=ot.prototype.toJSON.call(this,t),t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}),Object.assign(ct.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,i=t.vertexNormals.length;e<i;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(e=0,i=t.vertexColors.length;e<i;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});var Be=0;Object.assign(ut.prototype,e.prototype,{isGeometry:!0,applyMatrix:function(t){for(var e=(new $).getNormalMatrix(t),i=0,n=this.vertices.length;i<n;i++)this.vertices[i].applyMatrix4(t);for(i=0,n=this.faces.length;i<n;i++){(t=this.faces[i]).normal.applyMatrix3(e).normalize();for(var r=0,a=t.vertexNormals.length;r<a;r++)t.vertexNormals[r].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.normalsNeedUpdate=this.verticesNeedUpdate=!0,this},rotateX:function(){var t=new l;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new l;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new l;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new l;return function(e,i,n){return t.makeTranslation(e,i,n),this.applyMatrix(t),this}}(),scale:function(){var t=new l;return function(e,i,n){return t.makeScale(e,i,n),this.applyMatrix(t),this}}(),lookAt:function(){var t=new ot;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){function e(t,e,i,r){r=new ct(t,e,i,void 0!==l?[d[t].clone(),d[e].clone(),d[i].clone()]:[],void 0!==h?[n.colors[t].clone(),n.colors[e].clone(),n.colors[i].clone()]:[],r),n.faces.push(r),void 0!==c&&n.faceVertexUvs[0].push([f[t].clone(),f[e].clone(),f[i].clone()]),void 0!==u&&n.faceVertexUvs[1].push([p[t].clone(),p[e].clone(),p[i].clone()])}var n=this,r=null!==t.index?t.index.array:void 0,a=t.attributes,o=a.position.array,l=void 0!==a.normal?a.normal.array:void 0,h=void 0!==a.color?a.color.array:void 0,c=void 0!==a.uv?a.uv.array:void 0,u=void 0!==a.uv2?a.uv2.array:void 0;void 0!==u&&(this.faceVertexUvs[1]=[]);for(var d=[],f=[],p=[],m=a=0;a<o.length;a+=3,m+=2)n.vertices.push(new s(o[a],o[a+1],o[a+2])),void 0!==l&&d.push(new s(l[a],l[a+1],l[a+2])),void 0!==h&&n.colors.push(new H(h[a],h[a+1],h[a+2])),void 0!==c&&f.push(new i(c[m],c[m+1])),void 0!==u&&p.push(new i(u[m],u[m+1]));var g=t.groups;if(0<g.length)for(a=0;a<g.length;a++)for(var o=g[a],v=o.start,x=o.count,m=v,v=v+x;m<v;m+=3)void 0!==r?e(r[m],r[m+1],r[m+2],o.materialIndex):e(m,m+1,m+2,o.materialIndex);else if(void 0!==r)for(a=0;a<r.length;a+=3)e(r[a],r[a+1],r[a+2]);else for(a=0;a<o.length/3;a+=3)e(a,a+1,a+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=0===(e=this.boundingSphere.radius)?1:1/e,i=new l;return i.set(e,0,0,-e*t.x,0,e,0,-e*t.y,0,0,e,-e*t.z,0,0,0,1),this.applyMatrix(i),this},computeFaceNormals:function(){for(var t=new s,e=new s,i=0,n=this.faces.length;i<n;i++){var r=this.faces[i],a=this.vertices[r.a],o=this.vertices[r.b];t.subVectors(this.vertices[r.c],o),e.subVectors(a,o),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){void 0===t&&(t=!0);var e,i=Array(this.vertices.length),n=0;for(e=this.vertices.length;n<e;n++)i[n]=new s;if(t){var r=new s,a=new s;for(t=0,n=this.faces.length;t<n;t++){e=this.faces[t];var o=this.vertices[e.a],l=this.vertices[e.b],h=this.vertices[e.c];r.subVectors(h,l),a.subVectors(o,l),r.cross(a),i[e.a].add(r),i[e.b].add(r),i[e.c].add(r)}}else for(this.computeFaceNormals(),t=0,n=this.faces.length;t<n;t++)e=this.faces[t],i[e.a].add(e.normal),i[e.b].add(e.normal),i[e.c].add(e.normal);for(n=0,e=this.vertices.length;n<e;n++)i[n].normalize();for(t=0,n=this.faces.length;t<n;t++)e=this.faces[t],3===(o=e.vertexNormals).length?(o[0].copy(i[e.a]),o[1].copy(i[e.b]),o[2].copy(i[e.c])):(o[0]=i[e.a].clone(),o[1]=i[e.b].clone(),o[2]=i[e.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t;this.computeFaceNormals();var e=0;for(t=this.faces.length;e<t;e++){var i=this.faces[e],n=i.vertexNormals;3===n.length?(n[0].copy(i.normal),n[1].copy(i.normal),n[2].copy(i.normal)):(n[0]=i.normal.clone(),n[1]=i.normal.clone(),n[2]=i.normal.clone())}0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,i=0;for(e=this.faces.length;i<e;i++){var n=this.faces[i];n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]);var r=0;for(t=n.vertexNormals.length;r<t;r++)n.__originalVertexNormals[r]?n.__originalVertexNormals[r].copy(n.vertexNormals[r]):n.__originalVertexNormals[r]=n.vertexNormals[r].clone()}var a=new ut;for(a.faces=this.faces,r=0,t=this.morphTargets.length;r<t;r++){if(!this.morphNormals[r]){this.morphNormals[r]={},this.morphNormals[r].faceNormals=[],this.morphNormals[r].vertexNormals=[],n=this.morphNormals[r].faceNormals;var o=this.morphNormals[r].vertexNormals;for(i=0,e=this.faces.length;i<e;i++){var l=new s,h={a:new s,b:new s,c:new s};n.push(l),o.push(h)}}for(o=this.morphNormals[r],a.vertices=this.morphTargets[r].vertices,a.computeFaceNormals(),a.computeVertexNormals(),i=0,e=this.faces.length;i<e;i++)n=this.faces[i],l=o.faceNormals[i],h=o.vertexNormals[i],l.copy(n.normal),h.a.copy(n.vertexNormals[0]),h.b.copy(n.vertexNormals[1]),h.c.copy(n.vertexNormals[2])}for(i=0,e=this.faces.length;i<e;i++)n=this.faces[i],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeLineDistances:function(){for(var t=0,e=this.vertices,i=0,n=e.length;i<n;i++)0<i&&(t+=e[i].distanceTo(e[i-1])),this.lineDistances[i]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Q),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new K),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,i){if(t&&t.isGeometry){var n,r=this.vertices.length,a=this.vertices,o=t.vertices,s=this.faces,l=t.faces,h=this.faceVertexUvs[0],c=t.faceVertexUvs[0],u=this.colors,d=t.colors;void 0===i&&(i=0),void 0!==e&&(n=(new $).getNormalMatrix(e)),t=0;for(var f=o.length;t<f;t++){var p=o[t].clone();void 0!==e&&p.applyMatrix4(e),a.push(p)}for(t=0,f=d.length;t<f;t++)u.push(d[t].clone());for(t=0,f=l.length;t<f;t++){var m=(o=l[t]).vertexNormals,d=o.vertexColors;for((u=new ct(o.a+r,o.b+r,o.c+r)).normal.copy(o.normal),void 0!==n&&u.normal.applyMatrix3(n).normalize(),e=0,a=m.length;e<a;e++)p=m[e].clone(),void 0!==n&&p.applyMatrix3(n).normalize(),u.vertexNormals.push(p);for(u.color.copy(o.color),e=0,a=d.length;e<a;e++)p=d[e],u.vertexColors.push(p.clone());u.materialIndex=o.materialIndex+i,s.push(u)}for(t=0,f=c.length;t<f;t++)if(i=c[t],n=[],void 0!==i){for(e=0,a=i.length;e<a;e++)n.push(i[e].clone());h.push(n)}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){var t,e={},i=[],n=[],r=Math.pow(10,4),a=0;for(t=this.vertices.length;a<t;a++){var o=this.vertices[a];void 0===e[o=Math.round(o.x*r)+"_"+Math.round(o.y*r)+"_"+Math.round(o.z*r)]?(e[o]=a,i.push(this.vertices[a]),n[a]=i.length-1):n[a]=n[e[o]]}for(e=[],a=0,t=this.faces.length;a<t;a++)for(r=this.faces[a],r.a=n[r.a],r.b=n[r.b],r.c=n[r.c],r=[r.a,r.b,r.c],o=0;3>o;o++)if(r[o]===r[(o+1)%3]){e.push(a);break}for(a=e.length-1;0<=a;a--)for(r=e[a],this.faces.splice(r,1),n=0,t=this.faceVertexUvs.length;n<t;n++)this.faceVertexUvs[n].splice(r,1);return a=this.vertices.length-i.length,this.vertices=i,a},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,i=0;i<e;i++)t[i]._id=i;t.sort(function(t,e){return t.materialIndex-e.materialIndex});var n,r,a=this.faceVertexUvs[0],o=this.faceVertexUvs[1];for(a&&a.length===e&&(n=[]),o&&o.length===e&&(r=[]),i=0;i<e;i++){var s=t[i]._id;n&&n.push(a[s]),r&&r.push(o[s])}n&&(this.faceVertexUvs[0]=n),r&&(this.faceVertexUvs[1]=r)},toJSON:function(){function t(t,e,i){return i?t|1<<e:t&~(1<<e)}function e(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==h[e]?h[e]:(h[e]=l.length/3,l.push(t.x,t.y,t.z),h[e])}function i(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==u[e]?u[e]:(u[e]=c.length,c.push(t.getHex()),u[e])}function n(t){var e=t.x.toString()+t.y.toString();return void 0!==f[e]?f[e]:(f[e]=d.length/2,d.push(t.x,t.y),f[e])}var r={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),void 0!==this.parameters){var a,o=this.parameters;for(a in o)void 0!==o[a]&&(r[a]=o[a]);return r}for(o=[],a=0;a<this.vertices.length;a++){s=this.vertices[a];o.push(s.x,s.y,s.z)}var s=[],l=[],h={},c=[],u={},d=[],f={};for(a=0;a<this.faces.length;a++){var p=this.faces[a],m=void 0!==this.faceVertexUvs[0][a],g=0<p.normal.length(),v=0<p.vertexNormals.length,x=1!==p.color.r||1!==p.color.g||1!==p.color.b,_=0<p.vertexColors.length,y=t(y=t(y=t(y=t(y=t(y=t(y=t(y=t(y=0,0,0),1,!0),2,!1),3,m),4,g),5,v),6,x),7,_);s.push(y),s.push(p.a,p.b,p.c),s.push(p.materialIndex),m&&(m=this.faceVertexUvs[0][a],s.push(n(m[0]),n(m[1]),n(m[2]))),g&&s.push(e(p.normal)),v&&(g=p.vertexNormals,s.push(e(g[0]),e(g[1]),e(g[2]))),x&&s.push(i(p.color)),_&&(p=p.vertexColors,s.push(i(p[0]),i(p[1]),i(p[2])))}return r.data={},r.data.vertices=o,r.data.normals=l,0<c.length&&(r.data.colors=c),0<d.length&&(r.data.uvs=[d]),r.data.faces=s,r},clone:function(){return(new ut).copy(this)},copy:function(t){var e,i,n;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.name=t.name;var r=t.vertices,a=0;for(e=r.length;a<e;a++)this.vertices.push(r[a].clone());for(a=0,e=(r=t.colors).length;a<e;a++)this.colors.push(r[a].clone());for(a=0,e=(r=t.faces).length;a<e;a++)this.faces.push(r[a].clone());for(a=0,e=t.faceVertexUvs.length;a<e;a++){var o=t.faceVertexUvs[a];for(void 0===this.faceVertexUvs[a]&&(this.faceVertexUvs[a]=[]),r=0,i=o.length;r<i;r++){var s=o[r],l=[],h=0;for(n=s.length;h<n;h++)l.push(s[h].clone());this.faceVertexUvs[a].push(l)}}for(a=0,e=(h=t.morphTargets).length;a<e;a++){if(n={},n.name=h[a].name,void 0!==h[a].vertices)for(n.vertices=[],r=0,i=h[a].vertices.length;r<i;r++)n.vertices.push(h[a].vertices[r].clone());if(void 0!==h[a].normals)for(n.normals=[],r=0,i=h[a].normals.length;r<i;r++)n.normals.push(h[a].normals[r].clone());this.morphTargets.push(n)}for(a=0,e=(h=t.morphNormals).length;a<e;a++){if(n={},void 0!==h[a].vertexNormals)for(n.vertexNormals=[],r=0,i=h[a].vertexNormals.length;r<i;r++)o=h[a].vertexNormals[r],s={},s.a=o.a.clone(),s.b=o.b.clone(),s.c=o.c.clone(),n.vertexNormals.push(s);if(void 0!==h[a].faceNormals)for(n.faceNormals=[],r=0,i=h[a].faceNormals.length;r<i;r++)n.faceNormals.push(h[a].faceNormals[r].clone());this.morphNormals.push(n)}for(a=0,e=(r=t.skinWeights).length;a<e;a++)this.skinWeights.push(r[a].clone());for(a=0,e=(r=t.skinIndices).length;a<e;a++)this.skinIndices.push(r[a].clone());for(a=0,e=(r=t.lineDistances).length;a<e;a++)this.lineDistances.push(r[a]);return null!==(a=t.boundingBox)&&(this.boundingBox=a.clone()),null!==(a=t.boundingSphere)&&(this.boundingSphere=a.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.assign(dt.prototype,{isBufferAttribute:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.itemSize:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,i){t*=this.itemSize,i*=e.itemSize;for(var n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),a=new H),e[i++]=a.r,e[i++]=a.g,e[i++]=a.b}return this},copyIndicesArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];e[i++]=a.a,e[i++]=a.b,e[i++]=a.c}return this},copyVector2sArray:function(t){for(var e=this.array,n=0,r=0,a=t.length;r<a;r++){var o=t[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),o=new i),e[n++]=o.x,e[n++]=o.y}return this},copyVector3sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),a=new s),e[i++]=a.x,e[i++]=a.y,e[i++]=a.z}return this},copyVector4sArray:function(t){for(var e=this.array,i=0,n=0,a=t.length;n<a;n++){var o=t[n];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",n),o=new r),e[i++]=o.x,e[i++]=o.y,e[i++]=o.z,e[i++]=o.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),ft.prototype=Object.create(dt.prototype),ft.prototype.constructor=ft,pt.prototype=Object.create(dt.prototype),pt.prototype.constructor=pt,mt.prototype=Object.create(dt.prototype),mt.prototype.constructor=mt,gt.prototype=Object.create(dt.prototype),gt.prototype.constructor=gt,vt.prototype=Object.create(dt.prototype),vt.prototype.constructor=vt,xt.prototype=Object.create(dt.prototype),xt.prototype.constructor=xt,_t.prototype=Object.create(dt.prototype),_t.prototype.constructor=_t,yt.prototype=Object.create(dt.prototype),yt.prototype.constructor=yt,Mt.prototype=Object.create(dt.prototype),Mt.prototype.constructor=Mt,Object.assign(Et.prototype,{computeGroups:function(t){var e=[],i=void 0;t=t.faces;for(var n=0;n<t.length;n++){var r=t[n];if(r.materialIndex!==i){i=r.materialIndex,void 0!==a&&(a.count=3*n-a.start,e.push(a));var a={start:3*n,materialIndex:i}}}void 0!==a&&(a.count=3*n-a.start,e.push(a)),this.groups=e},fromGeometry:function(t){var e=t.faces,n=t.vertices,r=t.faceVertexUvs,a=r[0]&&0<r[0].length,o=r[1]&&0<r[1].length,s=t.morphTargets,l=s.length;if(0<l){for(var h=[],c=0;c<l;c++)h[c]=[];this.morphTargets.position=h}var u=t.morphNormals,d=u.length;if(0<d){var f=[];for(c=0;c<d;c++)f[c]=[];this.morphTargets.normal=f}for(var p=t.skinIndices,m=t.skinWeights,g=p.length===n.length,v=m.length===n.length,c=0;c<e.length;c++){var x=e[c];this.vertices.push(n[x.a],n[x.b],n[x.c]);var _=x.vertexNormals;for(3===_.length?this.normals.push(_[0],_[1],_[2]):(_=x.normal,this.normals.push(_,_,_)),3===(_=x.vertexColors).length?this.colors.push(_[0],_[1],_[2]):(_=x.color,this.colors.push(_,_,_)),!0===a&&(void 0!==(_=r[0][c])?this.uvs.push(_[0],_[1],_[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(new i,new i,new i))),!0===o&&(void 0!==(_=r[1][c])?this.uvs2.push(_[0],_[1],_[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(new i,new i,new i))),_=0;_<l;_++){var y=s[_].vertices;h[_].push(y[x.a],y[x.b],y[x.c])}for(_=0;_<d;_++)y=u[_].vertexNormals[c],f[_].push(y.a,y.b,y.c);g&&this.skinIndices.push(p[x.a],p[x.b],p[x.c]),v&&this.skinWeights.push(m[x.a],m[x.b],m[x.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}}),wt.MaxIndex=65535,Object.assign(wt.prototype,e.prototype,{isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(65535<bt(t)?_t:vt)(t,1):this.index=t},addAttribute:function(t,e,i){if(e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute){if("index"!==t)return this.attributes[t]=e,this;console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e)}else console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(t,new dt(e,i))},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,i){this.groups.push({start:t,count:e,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;return void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0),void 0!==(e=this.attributes.normal)&&((new $).getNormalMatrix(t).applyToBufferAttribute(e),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var t=new l;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new l;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new l;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new l;return function(e,i,n){return t.makeTranslation(e,i,n),this.applyMatrix(t),this}}(),scale:function(){var t=new l;return function(e,i,n){return t.makeScale(e,i,n),this.applyMatrix(t),this}}(),lookAt:function(){var t=new ot;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){t=new yt(3*e.vertices.length,3);var i=new yt(3*e.colors.length,3);this.addAttribute("position",t.copyVector3sArray(e.vertices)),this.addAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length&&(t=new yt(e.lineDistances.length,1),this.addAttribute("lineDistance",t.copyArray(e.lineDistances))),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},updateFromObject:function(t){var e=t.geometry;if(t.isMesh){var i=e.__directGeometry;if(!0===e.elementsNeedUpdate&&(i=void 0,e.elementsNeedUpdate=!1),void 0===i)return this.fromGeometry(e);i.verticesNeedUpdate=e.verticesNeedUpdate,i.normalsNeedUpdate=e.normalsNeedUpdate,i.colorsNeedUpdate=e.colorsNeedUpdate,i.uvsNeedUpdate=e.uvsNeedUpdate,i.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=i}return!0===e.verticesNeedUpdate&&(void 0!==(i=this.attributes.position)&&(i.copyVector3sArray(e.vertices),i.needsUpdate=!0),e.verticesNeedUpdate=!1),!0===e.normalsNeedUpdate&&(void 0!==(i=this.attributes.normal)&&(i.copyVector3sArray(e.normals),i.needsUpdate=!0),e.normalsNeedUpdate=!1),!0===e.colorsNeedUpdate&&(void 0!==(i=this.attributes.color)&&(i.copyColorsArray(e.colors),i.needsUpdate=!0),e.colorsNeedUpdate=!1),e.uvsNeedUpdate&&(void 0!==(i=this.attributes.uv)&&(i.copyVector2sArray(e.uvs),i.needsUpdate=!0),e.uvsNeedUpdate=!1),e.lineDistancesNeedUpdate&&(void 0!==(i=this.attributes.lineDistance)&&(i.copyArray(e.lineDistances),i.needsUpdate=!0),e.lineDistancesNeedUpdate=!1),e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new Et).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){i=new Float32Array(3*t.vertices.length);this.addAttribute("position",new dt(i,3).copyVector3sArray(t.vertices)),0<t.normals.length&&(i=new Float32Array(3*t.normals.length),this.addAttribute("normal",new dt(i,3).copyVector3sArray(t.normals))),0<t.colors.length&&(i=new Float32Array(3*t.colors.length),this.addAttribute("color",new dt(i,3).copyColorsArray(t.colors))),0<t.uvs.length&&(i=new Float32Array(2*t.uvs.length),this.addAttribute("uv",new dt(i,2).copyVector2sArray(t.uvs))),0<t.uvs2.length&&(i=new Float32Array(2*t.uvs2.length),this.addAttribute("uv2",new dt(i,2).copyVector2sArray(t.uvs2))),0<t.indices.length&&(i=new(65535<bt(t.indices)?Uint32Array:Uint16Array)(3*t.indices.length),this.setIndex(new dt(i,1).copyIndicesArray(t.indices))),this.groups=t.groups;for(var e in t.morphTargets){for(var i=[],n=t.morphTargets[e],r=0,a=n.length;r<a;r++){var o=n[r],s=new yt(3*o.length,3);i.push(s.copyVector3sArray(o))}this.morphAttributes[e]=i}return 0<t.skinIndices.length&&(e=new yt(4*t.skinIndices.length,4),this.addAttribute("skinIndex",e.copyVector4sArray(t.skinIndices))),0<t.skinWeights.length&&(e=new yt(4*t.skinWeights.length,4),this.addAttribute("skinWeight",e.copyVector4sArray(t.skinWeights))),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new Q);var t=this.attributes.position;void 0!==t?this.boundingBox.setFromBufferAttribute(t):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var t=new Q,e=new s;return function(){null===this.boundingSphere&&(this.boundingSphere=new K);var i=this.attributes.position;if(i){var n=this.boundingSphere.center;t.setFromBufferAttribute(i),t.getCenter(n);for(var r=0,a=0,o=i.count;a<o;a++)e.x=i.getX(a),e.y=i.getY(a),e.z=i.getZ(a),r=Math.max(r,n.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes,i=this.groups;if(e.position){var n=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new dt(new Float32Array(n.length),3));else for(var r=e.normal.array,a=0,o=r.length;a<o;a++)r[a]=0;var r=e.normal.array,l=new s,h=new s,c=new s,u=new s,d=new s;if(t){t=t.array,0===i.length&&this.addGroup(0,t.length);for(var f=0,p=i.length;f<p;++f){o=(a=i[f]).start;var m=a.count;for(a=o,o+=m;a<o;a+=3){m=3*t[a+0];var g=3*t[a+1],v=3*t[a+2];l.fromArray(n,m),h.fromArray(n,g),c.fromArray(n,v),u.subVectors(c,h),d.subVectors(l,h),u.cross(d),r[m]+=u.x,r[m+1]+=u.y,r[m+2]+=u.z,r[g]+=u.x,r[g+1]+=u.y,r[g+2]+=u.z,r[v]+=u.x,r[v+1]+=u.y,r[v+2]+=u.z}}}else for(a=0,o=n.length;a<o;a+=9)l.fromArray(n,a),h.fromArray(n,a+3),c.fromArray(n,a+6),u.subVectors(c,h),d.subVectors(l,h),u.cross(d),r[a]=u.x,r[a+1]=u.y,r[a+2]=u.z,r[a+3]=u.x,r[a+4]=u.y,r[a+5]=u.z,r[a+6]=u.x,r[a+7]=u.y,r[a+8]=u.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0);var i,n=this.attributes;for(i in n)if(void 0!==t.attributes[i])for(var r=n[i].array,a=t.attributes[i],o=a.array,s=0,a=a.itemSize*e;s<o.length;s++,a++)r[a]=o[s];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){var t=new s;return function(){for(var e=this.attributes.normal,i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.normalize(),e.setXYZ(i,t.x,t.y,t.z)}}(),toNonIndexed:function(){if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var t,e=new wt,i=this.index.array,n=this.attributes;for(t in n){for(var r,a=(o=n[t]).array,o=o.itemSize,s=new a.constructor(i.length*o),l=0,h=0,c=i.length;h<c;h++){r=i[h]*o;for(var u=0;u<o;u++)s[l++]=a[r++]}e.addAttribute(t,new dt(s,o))}return e},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};var n=this.index;null!==n&&(e=Array.prototype.slice.call(n.array),t.data.index={type:n.array.constructor.name,array:e}),n=this.attributes;for(i in n){var r=n[i];e=Array.prototype.slice.call(r.array),t.data.attributes[i]={itemSize:r.itemSize,type:r.array.constructor.name,array:e,normalized:r.normalized}}return 0<(i=this.groups).length&&(t.data.groups=JSON.parse(JSON.stringify(i))),null!==(i=this.boundingSphere)&&(t.data.boundingSphere={center:i.center.toArray(),radius:i.radius}),t},clone:function(){return(new wt).copy(this)},copy:function(t){var e;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingSphere=this.boundingBox=null,this.name=t.name;var i=t.index;null!==i&&this.setIndex(i.clone()),i=t.attributes;for(o in i)this.addAttribute(o,i[o].clone());var n=t.morphAttributes;for(o in n){var r=[],a=n[o];for(i=0,e=a.length;i<e;i++)r.push(a[i].clone());this.morphAttributes[o]=r}var o=t.groups;for(i=0,e=o.length;i<e;i++)n=o[i],this.addGroup(n.start,n.count,n.materialIndex);return null!==(o=t.boundingBox)&&(this.boundingBox=o.clone()),null!==(o=t.boundingSphere)&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Pt.prototype=Object.assign(Object.create(ot.prototype),{constructor:Pt,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return ot.prototype.copy.call(this,t),this.drawMode=t.drawMode,this},updateMorphTargets:function(){var t=this.geometry;if(t.isBufferGeometry){t=t.morphAttributes;var e=Object.keys(t);if(0<e.length){var i=t[e[0]];if(void 0!==i)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=i.length;t<e;t++){var n=i[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t}}}else if(void 0!==(i=t.morphTargets)&&0<i.length)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=i.length;t<e;t++)n=i[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=t},raycast:function(){function t(t,e,i,n,r,a,o){return Rt.barycoordFromPoint(t,e,i,n,x),r.multiplyScalar(x.x),a.multiplyScalar(x.y),o.multiplyScalar(x.z),r.add(a).add(o),r.clone()}function e(t,e,i,n,r,a,o,s){return null===(1===e.side?n.intersectTriangle(o,a,r,!0,s):n.intersectTriangle(r,a,o,2!==e.side,s))?null:(y.copy(s),y.applyMatrix4(t.matrixWorld),(e=i.ray.origin.distanceTo(y))<i.near||e>i.far?null:{distance:e,point:y.clone(),object:t})}function n(i,n,r,a,o,s,l,d){return h.fromBufferAttribute(a,s),c.fromBufferAttribute(a,l),u.fromBufferAttribute(a,d),(i=e(i,i.material,n,r,h,c,u,_))&&(o&&(m.fromBufferAttribute(o,s),g.fromBufferAttribute(o,l),v.fromBufferAttribute(o,d),i.uv=t(_,h,c,u,m,g,v)),i.face=new ct(s,l,d,Rt.normal(h,c,u)),i.faceIndex=s),i}var r=new l,a=new Lt,o=new K,h=new s,c=new s,u=new s,d=new s,f=new s,p=new s,m=new i,g=new i,v=new i,x=new s,_=new s,y=new s;return function(i,s){var l=this.geometry,x=this.material,y=this.matrixWorld;if(void 0!==x&&(null===l.boundingSphere&&l.computeBoundingSphere(),o.copy(l.boundingSphere),o.applyMatrix4(y),!1!==i.ray.intersectsSphere(o)&&(r.getInverse(y),a.copy(i.ray).applyMatrix4(r),null===l.boundingBox||!1!==a.intersectsBox(l.boundingBox)))){var M;if(l.isBufferGeometry){var E,x=l.index,b=l.attributes.position,y=l.attributes.uv;if(null!==x){var w=0;for(E=x.count;w<E;w+=3){l=x.getX(w);var T=x.getX(w+1),S=x.getX(w+2);(M=n(this,i,a,b,y,l,T,S))&&(M.faceIndex=Math.floor(w/3),s.push(M))}}else for(w=0,E=b.count;w<E;w+=3)l=w,T=w+1,S=w+2,(M=n(this,i,a,b,y,l,T,S))&&(M.index=l,s.push(M))}else if(l.isGeometry){y=Array.isArray(x);w=l.vertices,E=l.faces,0<(T=l.faceVertexUvs[0]).length&&(b=T);for(var A=0,L=E.length;A<L;A++){var R=E[A];if(void 0!==(M=y?x[R.materialIndex]:x)){T=w[R.a],S=w[R.b];var P=w[R.c];if(!0===M.morphTargets){var C=l.morphTargets,U=this.morphTargetInfluences;h.set(0,0,0),c.set(0,0,0),u.set(0,0,0);for(var N=0,D=C.length;N<D;N++){var I=U[N];if(0!==I){var F=C[N].vertices;h.addScaledVector(d.subVectors(F[R.a],T),I),c.addScaledVector(f.subVectors(F[R.b],S),I),u.addScaledVector(p.subVectors(F[R.c],P),I)}}h.add(T),c.add(S),u.add(P),T=h,S=c,P=u}(M=e(this,M,i,a,T,S,P,_))&&(b&&b[A]&&(C=b[A],m.copy(C[0]),g.copy(C[1]),v.copy(C[2]),M.uv=t(_,T,S,P,m,g,v)),M.face=R,M.faceIndex=A,s.push(M))}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var Ge=0;le.prototype=Object.assign(Object.create(ht.prototype),{constructor:le,isArrayCamera:!0}),pe.prototype=Object.assign(Object.create(ot.prototype),{constructor:pe,copy:function(t,e){return ot.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=ot.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}),me.prototype=Object.create(wt.prototype),me.prototype.constructor=me,ge.prototype=Object.create(ut.prototype),ge.prototype.constructor=ge,ve.prototype=Object.create(me.prototype),ve.prototype.constructor=ve,xe.prototype=Object.create(j.prototype),xe.prototype.constructor=xe,xe.prototype.isMeshPhongMaterial=!0,xe.prototype.copy=function(t){return j.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},_e.prototype=Object.assign(Object.create(ot.prototype),{constructor:_e,isLight:!0,copy:function(t){return ot.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){return t=ot.prototype.toJSON.call(this,t),t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}),Ee.prototype=Object.assign(Object.create(_e.prototype),{constructor:Ee,isSpotLight:!0,copy:function(t){return _e.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),t.WebGLRenderer=fe,t.Scene=pe,t.Mesh=Pt,t.SpotLight=Ee,t.FrontSide=0,t.Light=_e,t.StereoCamera=be,t.PerspectiveCamera=ht,t.IcosahedronGeometry=ge,t.MeshPhongMaterial=xe});